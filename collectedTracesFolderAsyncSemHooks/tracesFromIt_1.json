[
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testarAsyncfunctions/test/test.js",
    "Detected_Hook": "functionEnter",
    "loc": {
        "start": {
            "line": 1,
            "column": 1
        },
        "end": {
            "line": 22,
            "column": 4
        }
    },
    "Async_Hook_Id": 0,
    "Function_Name": "Anonymous Function ",
    "iid": 1,
    "timer": 7129.936866999604,
    "is_Callback": false
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testarAsyncfunctions/test/test.js",
    "Detected_Hook": "functionExit",
    "loc": {
        "start": {
            "line": 1,
            "column": 1
        },
        "end": {
            "line": 22,
            "column": 4
        }
    },
    "Async_Hook_Id": 0,
    "Returned_Type": "function",
    "Returned_Value": "{\"returnVal\":\"// test.js\\n//const { expect } = require(\\\"chai\\\"); // Usando Chai para asserções\\nconst { add, fetchData } = require(\\\"../main\\\"); // Importando funções a serem testadas\\n\\nconst assert = require('assert');\\n\\ndescribe(\\\"Testando funções síncronas e assíncronas\\\", () => {\\n  \\n  // Teste para a função síncrona\\n  it(\\\"deve somar dois números corretamente\\\", () => {\\n    const result = add(2, 3);\\n    //expect(result).to.equal(5);\\n    assert.equal(result, 5);\\n  });\\n\\n  // Teste para a função assíncrona\\n  it(\\\"deve retornar dados após chamada assíncrona\\\", async () => {\\n    const data = await fetchData();\\n    //expect(data).to.equal(\\\"Dados recebidos\\\");\\n    assert.equal(data, \\\"Dados recebidos\\\");\\n  });\\n});\\n\"}",
    "Excession_Occurred": {},
    "iid": 1,
    "timer": 7132.994958000258
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testarAsyncfunctions/test/test.js",
    "Detected_Hook": "functionEnter",
    "loc": {
        "start": {
            "line": 1,
            "column": 1
        },
        "end": {
            "line": 22,
            "column": 4
        }
    },
    "Async_Hook_Id": 0,
    "Function_Name": "Anonymous Function ",
    "iid": 1,
    "timer": 7134.955856000073,
    "is_Callback": false
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testarAsyncfunctions/test/test.js",
    "Detected_Hook": "invokeFunPre",
    "loc": {
        "start": {
            "line": 3,
            "column": 28
        },
        "end": {
            "line": 3,
            "column": 45
        }
    },
    "Async_Hook_Id": 0,
    "Function_Name": "require",
    "Function_Arguments": "../main",
    "iid": 2,
    "timer": 7138.046241999604,
    "Makes_CallBack": false
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testarAsyncfunctions/main.js",
    "Detected_Hook": "functionEnter",
    "loc": {
        "start": {
            "line": 1,
            "column": 1
        },
        "end": {
            "line": 19,
            "column": 2
        }
    },
    "Async_Hook_Id": 0,
    "Function_Name": "Anonymous Function ",
    "iid": 3,
    "timer": 7140.025662000291,
    "is_Callback": false
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testarAsyncfunctions/main.js",
    "Detected_Hook": "functionExit",
    "loc": {
        "start": {
            "line": 1,
            "column": 1
        },
        "end": {
            "line": 19,
            "column": 2
        }
    },
    "Async_Hook_Id": 0,
    "Returned_Type": "function",
    "Returned_Value": "{\"returnVal\":\"// functions.js\\n\\n// Função síncrona\\nfunction add(a, b) {\\n    return a + b;\\n  }\\n  \\n  // Função assíncrona\\n  async function fetchData() {\\n    // Simulando uma chamada de API com Promise\\n    return new Promise((resolve) => {\\n      setTimeout(() => {\\n        resolve(\\\"Dados recebidos\\\");\\n      }, 1000);\\n    });\\n  }\\n  \\n  module.exports = { add, fetchData };\\n  \"}",
    "Excession_Occurred": {},
    "iid": 3,
    "timer": 7140.432151000015
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testarAsyncfunctions/main.js",
    "Detected_Hook": "functionEnter",
    "loc": {
        "start": {
            "line": 1,
            "column": 1
        },
        "end": {
            "line": 19,
            "column": 2
        }
    },
    "Async_Hook_Id": 0,
    "Function_Name": "Anonymous Function ",
    "iid": 3,
    "timer": 7140.981359000318,
    "is_Callback": false
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testarAsyncfunctions/main.js",
    "Detected_Hook": "functionExit",
    "loc": {
        "start": {
            "line": 1,
            "column": 1
        },
        "end": {
            "line": 19,
            "column": 2
        }
    },
    "Async_Hook_Id": 0,
    "Returned_Type": "undefined",
    "Returned_Value": "[]",
    "Excession_Occurred": {},
    "iid": 3,
    "timer": 7142.115643999539
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testarAsyncfunctions/test/test.js",
    "Detected_Hook": "invokeFun",
    "loc": {
        "start": {
            "line": 3,
            "column": 28
        },
        "end": {
            "line": 3,
            "column": 45
        }
    },
    "Async_Hook_Id": 0,
    "Function_Name": "require",
    "Tipo_Returned_Value": "object",
    "Returned_Value": "[{}]",
    "iid": 2,
    "timer": 7143.138923999853
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testarAsyncfunctions/test/test.js",
    "Detected_Hook": "invokeFunPre",
    "loc": {
        "start": {
            "line": 5,
            "column": 16
        },
        "end": {
            "line": 5,
            "column": 32
        }
    },
    "Async_Hook_Id": 0,
    "Function_Name": "require",
    "Function_Arguments": "assert",
    "iid": 4,
    "timer": 7143.669514999725,
    "Makes_CallBack": false
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testarAsyncfunctions/test/test.js",
    "Detected_Hook": "invokeFun",
    "loc": {
        "start": {
            "line": 5,
            "column": 16
        },
        "end": {
            "line": 5,
            "column": 32
        }
    },
    "Async_Hook_Id": 0,
    "Function_Name": "require",
    "Tipo_Returned_Value": "function",
    "Returned_Value": "{\"result\":\"function ok(...args) {\\n  innerOk(ok, args.length, ...args);\\n}\"}",
    "iid": 4,
    "timer": 7144.145181999542
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testarAsyncfunctions/test/test.js",
    "Detected_Hook": "invokeFunPre",
    "loc": {
        "start": {
            "line": 7,
            "column": 1
        },
        "end": {
            "line": 22,
            "column": 2
        }
    },
    "Async_Hook_Id": 0,
    "Function_Name": "Anonymous Function ",
    "Function_Arguments": "Testando funções síncronas e assíncronas, () => {\n  \n  // Teste para a função síncrona\n  it(\"deve somar dois números corretamente\", () => {\n    const result = add(2, 3);\n    //expect(result).to.equal(5);\n    assert.equal(result, 5);\n  });\n\n  // Teste para a função assíncrona\n  it(\"deve retornar dados após chamada assíncrona\", async () => {\n    const data = await fetchData();\n    //expect(data).to.equal(\"Dados recebidos\");\n    assert.equal(data, \"Dados recebidos\");\n  });\n}",
    "iid": 5,
    "timer": 7144.674627999775,
    "Makes_CallBack": true
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testarAsyncfunctions/test/test.js",
    "Detected_Hook": "functionEnter",
    "loc": {
        "start": {
            "line": 7,
            "column": 54
        },
        "end": {
            "line": 22,
            "column": 1
        }
    },
    "Async_Hook_Id": 0,
    "Function_Name": "Anonymous Function ",
    "iid": 6,
    "timer": 7147.350965999998,
    "is_Callback": true,
    "valueCallerIID": 5
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testarAsyncfunctions/test/test.js",
    "Detected_Hook": "invokeFunPre",
    "loc": {
        "start": {
            "line": 10,
            "column": 3
        },
        "end": {
            "line": 14,
            "column": 4
        }
    },
    "Async_Hook_Id": 0,
    "Function_Name": "Anonymous Function ",
    "Function_Arguments": "deve somar dois números corretamente, () => {\n    const result = add(2, 3);\n    //expect(result).to.equal(5);\n    assert.equal(result, 5);\n  }",
    "iid": 8,
    "timer": 7148.708565999754,
    "Makes_CallBack": true
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testarAsyncfunctions/test/test.js",
    "Detected_Hook": "invokeFun",
    "loc": {
        "start": {
            "line": 10,
            "column": 3
        },
        "end": {
            "line": 14,
            "column": 4
        }
    },
    "Async_Hook_Id": 0,
    "Function_Name": "Anonymous Function ",
    "Tipo_Returned_Value": "object",
    "Returned_Value": "[{\"type\":\"1\",\"title\":\"2\",\"body\":\"3\",\"async\":0,\"sync\":true,\"_timeout\":2000,\"_slow\":75,\"_retries\":-1,\"timedOut\":false,\"_currentRetry\":0,\"pending\":false,\"file\":\"4\",\"parent\":\"5\",\"ctx\":\"6\"},\"test\",\"deve somar dois números corretamente\",\"() => {\\n    const result = add(2, 3);\\n    //expect(result).to.equal(5);\\n    assert.equal(result, 5);\\n  }\",\"/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testarAsyncfunctions/test/test.js\",{\"title\":\"7\",\"ctx\":\"6\",\"suites\":\"8\",\"tests\":\"9\",\"root\":false,\"pending\":false,\"_retries\":-1,\"_beforeEach\":\"10\",\"_beforeAll\":\"11\",\"_afterEach\":\"12\",\"_afterAll\":\"13\",\"_timeout\":2000,\"_slow\":75,\"_bail\":false,\"_onlyTests\":\"14\",\"_onlySuites\":\"15\",\"delayed\":false,\"parent\":\"16\",\"file\":\"4\"},{},\"Testando funções síncronas e assíncronas\",[],[\"0\"],[],[],[],[],[],[],{\"title\":\"17\",\"ctx\":\"18\",\"suites\":\"19\",\"tests\":\"20\",\"root\":true,\"pending\":false,\"_retries\":-1,\"_beforeEach\":\"21\",\"_beforeAll\":\"22\",\"_afterEach\":\"23\",\"_afterAll\":\"24\",\"_timeout\":2000,\"_slow\":75,\"_bail\":false,\"_onlyTests\":\"25\",\"_onlySuites\":\"26\",\"delayed\":false,\"_events\":\"27\",\"_eventsCount\":1},\"\",{},[\"5\"],[],[],[],[],[],[],[],{\"pre-require\":\"28\"},[null,null]]",
    "iid": 8,
    "timer": 7153.807551000267
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testarAsyncfunctions/test/test.js",
    "Detected_Hook": "invokeFunPre",
    "loc": {
        "start": {
            "line": 17,
            "column": 3
        },
        "end": {
            "line": 21,
            "column": 4
        }
    },
    "Async_Hook_Id": 0,
    "Function_Name": "Anonymous Function ",
    "Function_Arguments": "deve retornar dados após chamada assíncrona, async () => {\n    const data = await fetchData();\n    //expect(data).to.equal(\"Dados recebidos\");\n    assert.equal(data, \"Dados recebidos\");\n  }",
    "iid": 9,
    "timer": 7154.877275000326,
    "Makes_CallBack": true
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testarAsyncfunctions/test/test.js",
    "Detected_Hook": "invokeFun",
    "loc": {
        "start": {
            "line": 17,
            "column": 3
        },
        "end": {
            "line": 21,
            "column": 4
        }
    },
    "Async_Hook_Id": 0,
    "Function_Name": "Anonymous Function ",
    "Tipo_Returned_Value": "object",
    "Returned_Value": "[{\"type\":\"1\",\"title\":\"2\",\"body\":\"3\",\"async\":0,\"sync\":true,\"_timeout\":2000,\"_slow\":75,\"_retries\":-1,\"timedOut\":false,\"_currentRetry\":0,\"pending\":false,\"file\":\"4\",\"parent\":\"5\",\"ctx\":\"6\"},\"test\",\"deve retornar dados após chamada assíncrona\",\"async () => {\\n    const data = await fetchData();\\n    //expect(data).to.equal(\\\"Dados recebidos\\\");\\n    assert.equal(data, \\\"Dados recebidos\\\");\\n  }\",\"/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testarAsyncfunctions/test/test.js\",{\"title\":\"7\",\"ctx\":\"6\",\"suites\":\"8\",\"tests\":\"9\",\"root\":false,\"pending\":false,\"_retries\":-1,\"_beforeEach\":\"10\",\"_beforeAll\":\"11\",\"_afterEach\":\"12\",\"_afterAll\":\"13\",\"_timeout\":2000,\"_slow\":75,\"_bail\":false,\"_onlyTests\":\"14\",\"_onlySuites\":\"15\",\"delayed\":false,\"parent\":\"16\",\"file\":\"4\"},{},\"Testando funções síncronas e assíncronas\",[],[\"17\",\"0\"],[],[],[],[],[],[],{\"title\":\"18\",\"ctx\":\"19\",\"suites\":\"20\",\"tests\":\"21\",\"root\":true,\"pending\":false,\"_retries\":-1,\"_beforeEach\":\"22\",\"_beforeAll\":\"23\",\"_afterEach\":\"24\",\"_afterAll\":\"25\",\"_timeout\":2000,\"_slow\":75,\"_bail\":false,\"_onlyTests\":\"26\",\"_onlySuites\":\"27\",\"delayed\":false,\"_events\":\"28\",\"_eventsCount\":1},{\"type\":\"1\",\"title\":\"29\",\"body\":\"30\",\"async\":0,\"sync\":true,\"_timeout\":2000,\"_slow\":75,\"_retries\":-1,\"timedOut\":false,\"_currentRetry\":0,\"pending\":false,\"file\":\"4\",\"parent\":\"5\",\"ctx\":\"6\"},\"\",{},[\"5\"],[],[],[],[],[],[],[],{\"pre-require\":\"31\"},\"deve somar dois números corretamente\",\"() => {\\n    const result = add(2, 3);\\n    //expect(result).to.equal(5);\\n    assert.equal(result, 5);\\n  }\",[null,null]]",
    "iid": 9,
    "timer": 7157.218725999817
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testarAsyncfunctions/test/test.js",
    "Detected_Hook": "functionExit",
    "loc": {
        "start": {
            "line": 7,
            "column": 54
        },
        "end": {
            "line": 22,
            "column": 1
        }
    },
    "Async_Hook_Id": 0,
    "Returned_Type": "undefined",
    "Returned_Value": "[]",
    "Excession_Occurred": {},
    "iid": 6,
    "timer": 7157.76128899958
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testarAsyncfunctions/test/test.js",
    "Detected_Hook": "invokeFun",
    "loc": {
        "start": {
            "line": 7,
            "column": 1
        },
        "end": {
            "line": 22,
            "column": 2
        }
    },
    "Async_Hook_Id": 0,
    "Function_Name": "Anonymous Function ",
    "Tipo_Returned_Value": "object",
    "Returned_Value": "[{\"title\":\"1\",\"ctx\":\"2\",\"suites\":\"3\",\"tests\":\"4\",\"root\":false,\"pending\":false,\"_retries\":-1,\"_beforeEach\":\"5\",\"_beforeAll\":\"6\",\"_afterEach\":\"7\",\"_afterAll\":\"8\",\"_timeout\":2000,\"_slow\":75,\"_bail\":false,\"_onlyTests\":\"9\",\"_onlySuites\":\"10\",\"delayed\":false,\"parent\":\"11\",\"file\":\"12\"},\"Testando funções síncronas e assíncronas\",{},[],[\"13\",\"14\"],[],[],[],[],[],[],{\"title\":\"15\",\"ctx\":\"16\",\"suites\":\"17\",\"tests\":\"18\",\"root\":true,\"pending\":false,\"_retries\":-1,\"_beforeEach\":\"19\",\"_beforeAll\":\"20\",\"_afterEach\":\"21\",\"_afterAll\":\"22\",\"_timeout\":2000,\"_slow\":75,\"_bail\":false,\"_onlyTests\":\"23\",\"_onlySuites\":\"24\",\"delayed\":false,\"_events\":\"25\",\"_eventsCount\":1},\"/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testarAsyncfunctions/test/test.js\",{\"type\":\"26\",\"title\":\"27\",\"body\":\"28\",\"async\":0,\"sync\":true,\"_timeout\":2000,\"_slow\":75,\"_retries\":-1,\"timedOut\":false,\"_currentRetry\":0,\"pending\":false,\"file\":\"12\",\"parent\":\"0\",\"ctx\":\"2\"},{\"type\":\"26\",\"title\":\"29\",\"body\":\"30\",\"async\":0,\"sync\":true,\"_timeout\":2000,\"_slow\":75,\"_retries\":-1,\"timedOut\":false,\"_currentRetry\":0,\"pending\":false,\"file\":\"12\",\"parent\":\"0\",\"ctx\":\"2\"},\"\",{},[\"0\"],[],[],[],[],[],[],[],{\"pre-require\":\"31\"},\"test\",\"deve somar dois números corretamente\",\"() => {\\n    const result = add(2, 3);\\n    //expect(result).to.equal(5);\\n    assert.equal(result, 5);\\n  }\",\"deve retornar dados após chamada assíncrona\",\"async () => {\\n    const data = await fetchData();\\n    //expect(data).to.equal(\\\"Dados recebidos\\\");\\n    assert.equal(data, \\\"Dados recebidos\\\");\\n  }\",[null,null]]",
    "iid": 5,
    "timer": 7159.578045999631
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testarAsyncfunctions/test/test.js",
    "Detected_Hook": "functionExit",
    "loc": {
        "start": {
            "line": 1,
            "column": 1
        },
        "end": {
            "line": 22,
            "column": 4
        }
    },
    "Async_Hook_Id": 0,
    "Returned_Type": "undefined",
    "Returned_Value": "[]",
    "Excession_Occurred": {},
    "iid": 1,
    "timer": 7160.0935800001025
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testarAsyncfunctions/test/test.js",
    "Detected_Hook": "functionEnter",
    "loc": {
        "start": {
            "line": 17,
            "column": 53
        },
        "end": {
            "line": 21,
            "column": 3
        }
    },
    "Async_Hook_Id": 13,
    "Function_Name": "Anonymous Function ",
    "iid": 10,
    "timer": 7211.179197999649,
    "is_Callback": true,
    "valueCallerIID": 9
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testarAsyncfunctions/test/test.js",
    "Detected_Hook": "invokeFunPre",
    "loc": {
        "start": {
            "line": 18,
            "column": 24
        },
        "end": {
            "line": 18,
            "column": 34
        }
    },
    "Async_Hook_Id": 13,
    "Function_Name": "fetchData",
    "Function_Arguments": "",
    "iid": 12,
    "timer": 7212.363436999731,
    "Makes_CallBack": false
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testarAsyncfunctions/main.js",
    "Detected_Hook": "functionEnter",
    "loc": {
        "start": {
            "line": 9,
            "column": 3
        },
        "end": {
            "line": 16,
            "column": 3
        }
    },
    "Async_Hook_Id": 13,
    "Function_Name": "fetchData",
    "iid": 13,
    "timer": 7213.8016849998385,
    "is_Callback": false
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testarAsyncfunctions/main.js",
    "Detected_Hook": "invokeFunPre",
    "loc": {
        "start": {
            "line": 11,
            "column": 12
        },
        "end": {
            "line": 15,
            "column": 6
        }
    },
    "Async_Hook_Id": 13,
    "Function_Name": "Promise",
    "Function_Arguments": "(resolve) => {\n      setTimeout(() => {\n        resolve(\"Dados recebidos\");\n      }, 1000);\n    }",
    "iid": 15,
    "timer": 7214.587991999462,
    "Makes_CallBack": true
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testarAsyncfunctions/main.js",
    "Detected_Hook": "functionEnter",
    "loc": {
        "start": {
            "line": 11,
            "column": 24
        },
        "end": {
            "line": 15,
            "column": 5
        }
    },
    "Async_Hook_Id": 13,
    "Function_Name": "Anonymous Function ",
    "iid": 16,
    "timer": 7216.3004719996825,
    "is_Callback": true,
    "valueCallerIID": 15
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testarAsyncfunctions/main.js",
    "Detected_Hook": "invokeFunPre",
    "loc": {
        "start": {
            "line": 12,
            "column": 7
        },
        "end": {
            "line": 14,
            "column": 14
        }
    },
    "Async_Hook_Id": 13,
    "Function_Name": "setTimeout",
    "Function_Arguments": "() => {\n        resolve(\"Dados recebidos\");\n      }, 1000",
    "iid": 18,
    "timer": 7217.1430029999465,
    "Makes_CallBack": true
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testarAsyncfunctions/main.js",
    "Detected_Hook": "invokeFun",
    "loc": {
        "start": {
            "line": 12,
            "column": 7
        },
        "end": {
            "line": 14,
            "column": 14
        }
    },
    "Async_Hook_Id": 13,
    "Function_Name": "setTimeout",
    "Tipo_Returned_Value": "object",
    "Returned_Value": "[{\"_idleTimeout\":1000,\"_idlePrev\":\"1\",\"_idleNext\":\"1\",\"_idleStart\":7221,\"_repeat\":null,\"_destroyed\":false},{\"_idleNext\":\"0\",\"_idlePrev\":\"0\",\"expiry\":8221,\"id\":-9007199254740991,\"msecs\":1000,\"priorityQueuePosition\":1}]",
    "iid": 18,
    "timer": 7225.420164999552
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testarAsyncfunctions/main.js",
    "Detected_Hook": "functionExit",
    "loc": {
        "start": {
            "line": 11,
            "column": 24
        },
        "end": {
            "line": 15,
            "column": 5
        }
    },
    "Async_Hook_Id": 13,
    "Returned_Type": "undefined",
    "Returned_Value": "[]",
    "Excession_Occurred": {},
    "iid": 16,
    "timer": 7225.935971000232
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testarAsyncfunctions/main.js",
    "Detected_Hook": "invokeFun",
    "loc": {
        "start": {
            "line": 11,
            "column": 12
        },
        "end": {
            "line": 15,
            "column": 6
        }
    },
    "Async_Hook_Id": 13,
    "Function_Name": "Promise",
    "Tipo_Returned_Value": "object",
    "Returned_Value": "[{}]",
    "iid": 15,
    "timer": 7226.4220949998125
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testarAsyncfunctions/main.js",
    "Detected_Hook": "functionExit",
    "loc": {
        "start": {
            "line": 9,
            "column": 3
        },
        "end": {
            "line": 16,
            "column": 3
        }
    },
    "Async_Hook_Id": 13,
    "Returned_Type": "object",
    "Returned_Value": "[{}]",
    "Excession_Occurred": {},
    "iid": 13,
    "timer": 7226.814833999611
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testarAsyncfunctions/test/test.js",
    "Detected_Hook": "invokeFun",
    "loc": {
        "start": {
            "line": 18,
            "column": 24
        },
        "end": {
            "line": 18,
            "column": 34
        }
    },
    "Async_Hook_Id": 13,
    "Function_Name": "fetchData",
    "Tipo_Returned_Value": "object",
    "Returned_Value": "[{}]",
    "iid": 12,
    "timer": 7227.242643999867
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testarAsyncfunctions/test/test.js",
    "Detected_Hook": "functionExit",
    "loc": {
        "start": {
            "line": 17,
            "column": 53
        },
        "end": {
            "line": 21,
            "column": 3
        }
    },
    "Async_Hook_Id": 13,
    "Returned_Type": "undefined",
    "Returned_Value": "[]",
    "Excession_Occurred": {
        "yield": true
    },
    "iid": 10,
    "timer": 7227.751610999927
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testarAsyncfunctions/main.js",
    "Detected_Hook": "functionEnter",
    "loc": {
        "start": {
            "line": 12,
            "column": 18
        },
        "end": {
            "line": 14,
            "column": 7
        }
    },
    "Async_Hook_Id": 14,
    "Function_Name": "Anonymous Function ",
    "iid": 19,
    "timer": 8224.061133000068,
    "is_Callback": true,
    "valueCallerIID": 18
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testarAsyncfunctions/main.js",
    "Detected_Hook": "invokeFunPre",
    "loc": {
        "start": {
            "line": 13,
            "column": 9
        },
        "end": {
            "line": 13,
            "column": 34
        }
    },
    "Async_Hook_Id": 14,
    "Function_Name": "Anonymous Function ",
    "Function_Arguments": "Dados recebidos",
    "iid": 21,
    "timer": 8224.965303000063,
    "Makes_CallBack": false
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testarAsyncfunctions/main.js",
    "Detected_Hook": "invokeFun",
    "loc": {
        "start": {
            "line": 13,
            "column": 9
        },
        "end": {
            "line": 13,
            "column": 34
        }
    },
    "Async_Hook_Id": 14,
    "Function_Name": "Anonymous Function ",
    "Tipo_Returned_Value": "undefined",
    "Returned_Value": "[]",
    "iid": 21,
    "timer": 8225.51919199992
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testarAsyncfunctions/main.js",
    "Detected_Hook": "functionExit",
    "loc": {
        "start": {
            "line": 12,
            "column": 18
        },
        "end": {
            "line": 14,
            "column": 7
        }
    },
    "Async_Hook_Id": 14,
    "Returned_Type": "undefined",
    "Returned_Value": "[]",
    "Excession_Occurred": {},
    "iid": 19,
    "timer": 8225.838948999532
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testarAsyncfunctions/test/test.js",
    "Detected_Hook": "functionEnter",
    "loc": {
        "start": {
            "line": 17,
            "column": 53
        },
        "end": {
            "line": 21,
            "column": 3
        }
    },
    "Async_Hook_Id": 0,
    "Function_Name": "Anonymous Function ",
    "iid": 10,
    "timer": 8227.122599000111,
    "is_Callback": true,
    "valueCallerIID": 9
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testarAsyncfunctions/test/test.js",
    "Detected_Hook": "invokeFunPre",
    "loc": {
        "start": {
            "line": 20,
            "column": 5
        },
        "end": {
            "line": 20,
            "column": 41
        }
    },
    "Async_Hook_Id": 0,
    "Function_Name": "equal",
    "Function_Arguments": "Dados recebidos, Dados recebidos",
    "iid": 22,
    "timer": 8227.698824999854,
    "Makes_CallBack": false
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testarAsyncfunctions/test/test.js",
    "Detected_Hook": "invokeFun",
    "loc": {
        "start": {
            "line": 20,
            "column": 5
        },
        "end": {
            "line": 20,
            "column": 41
        }
    },
    "Async_Hook_Id": 0,
    "Function_Name": "equal",
    "Tipo_Returned_Value": "undefined",
    "Returned_Value": "[]",
    "iid": 22,
    "timer": 8228.19010999985
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testarAsyncfunctions/test/test.js",
    "Detected_Hook": "functionExit",
    "loc": {
        "start": {
            "line": 17,
            "column": 53
        },
        "end": {
            "line": 21,
            "column": 3
        }
    },
    "Async_Hook_Id": 0,
    "Returned_Type": "undefined",
    "Returned_Value": "[]",
    "Excession_Occurred": {},
    "iid": 10,
    "timer": 8228.482237000018
}
]