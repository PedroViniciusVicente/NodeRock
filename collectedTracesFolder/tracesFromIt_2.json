[
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "functionEnter",
    "loc": {
        "start": {
            "line": 1,
            "column": 1
        },
        "end": {
            "line": 30,
            "column": 4
        }
    },
    "Async_Hook_Id": 0,
    "Function_Name": "Anonymous Function ",
    "iid": 1
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "awaitPost",
    "loc": {
        "start": {
            "line": 1,
            "column": 1
        },
        "end": {
            "line": 30,
            "column": 4
        }
    },
    "Async_Hook_Id": 0,
    "Statement_Type": "AutonomousFunctionExpression"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "startExpression",
    "loc": {
        "start": {
            "line": 1,
            "column": 1
        },
        "end": {
            "line": 30,
            "column": 4
        }
    },
    "Async_Hook_Id": 0,
    "Expression_Type": "AutonomousFunctionExpression"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "literal",
    "loc": {
        "start": {
            "line": 1,
            "column": 1
        },
        "end": {
            "line": 30,
            "column": 4
        }
    },
    "Async_Hook_Id": 0,
    "Literal_Type": "FunctionLiteral",
    "Literal_Value_Type": "function",
    "Literal_Value": "{\"val\":\"const assert = require('assert');\\nconst { somarEdobrar, subtrairEdividir } = require('../arquivoPrincipal2');\\n\\n\\ndescribe('Testes da Primeira funcao', function () {\\n    it('somarEdobrar com x e y positivos', function () {\\n        const resultado1 = somarEdobrar(8, 12);\\n        assert.equal(resultado1, 40);\\n    });\\n\\n    it('somarEdobrar com x e y negativos', function () {\\n        const resultado2 = somarEdobrar(-10, -20);\\n        assert.equal(resultado2, -60);\\n    });\\n\\n});\\n\\n\\ndescribe('Testes da Segunda funcao', function () {\\n    it('subtrairEdividir com x e y positivos', function () {\\n        const resultado1 = subtrairEdividir(20, 10);\\n        assert.equal(resultado1, 5);\\n    });\\n\\n    it('subtrairEdividir com x e y negativos', function () {\\n        const resultado1 = subtrairEdividir(-30, -8);\\n        assert.equal(resultado1, -11);\\n    });\\n\\n});\\n\"}"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "endExpression",
    "loc": {
        "start": {
            "line": 1,
            "column": 1
        },
        "end": {
            "line": 30,
            "column": 4
        }
    },
    "Async_Hook_Id": 0,
    "Expression_Type": "AutonomousFunctionExpression"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "functionExit",
    "loc": {
        "start": {
            "line": 1,
            "column": 1
        },
        "end": {
            "line": 30,
            "column": 4
        }
    },
    "Async_Hook_Id": 0,
    "Returned_Type": "function",
    "Returned_Value": "{\"returnVal\":\"const assert = require('assert');\\nconst { somarEdobrar, subtrairEdividir } = require('../arquivoPrincipal2');\\n\\n\\ndescribe('Testes da Primeira funcao', function () {\\n    it('somarEdobrar com x e y positivos', function () {\\n        const resultado1 = somarEdobrar(8, 12);\\n        assert.equal(resultado1, 40);\\n    });\\n\\n    it('somarEdobrar com x e y negativos', function () {\\n        const resultado2 = somarEdobrar(-10, -20);\\n        assert.equal(resultado2, -60);\\n    });\\n\\n});\\n\\n\\ndescribe('Testes da Segunda funcao', function () {\\n    it('subtrairEdividir com x e y positivos', function () {\\n        const resultado1 = subtrairEdividir(20, 10);\\n        assert.equal(resultado1, 5);\\n    });\\n\\n    it('subtrairEdividir com x e y negativos', function () {\\n        const resultado1 = subtrairEdividir(-30, -8);\\n        assert.equal(resultado1, -11);\\n    });\\n\\n});\\n\"}",
    "Excession_Occurred": {},
    "iid": 1,
    "Runtime_ms": 9.342814000323415
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "functionEnter",
    "loc": {
        "start": {
            "line": 1,
            "column": 1
        },
        "end": {
            "line": 30,
            "column": 4
        }
    },
    "Async_Hook_Id": 0,
    "Function_Name": "Anonymous Function ",
    "iid": 1
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "awaitPost",
    "loc": {
        "start": {
            "line": 1,
            "column": 1
        },
        "end": {
            "line": 1,
            "column": 32
        }
    },
    "Async_Hook_Id": 0,
    "Statement_Type": "JSWriteCurrentFrameSlot"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "startExpression",
    "loc": {
        "start": {
            "line": 1,
            "column": 16
        },
        "end": {
            "line": 1,
            "column": 32
        }
    },
    "Async_Hook_Id": 0,
    "Expression_Type": "Call1"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "startExpression",
    "loc": {
        "start": {
            "line": 1,
            "column": 16
        },
        "end": {
            "line": 1,
            "column": 22
        }
    },
    "Async_Hook_Id": 0,
    "Expression_Type": "JSReadCurrentFrameSlot"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "read",
    "loc": {
        "start": {
            "line": 1,
            "column": 16
        },
        "end": {
            "line": 1,
            "column": 22
        }
    },
    "Async_Hook_Id": 0,
    "Variable_Name": "require",
    "Type_Value_Read": "function",
    "val": "{\"val\":\"function require(path) {\\n      return mod.require(path);\\n    }\"}"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "endExpression",
    "loc": {
        "start": {
            "line": 1,
            "column": 16
        },
        "end": {
            "line": 1,
            "column": 22
        }
    },
    "Async_Hook_Id": 0,
    "Expression_Type": "JSReadCurrentFrameSlot"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "startExpression",
    "loc": {
        "start": {
            "line": 1,
            "column": 24
        },
        "end": {
            "line": 1,
            "column": 31
        }
    },
    "Async_Hook_Id": 0,
    "Expression_Type": "JSConstantString"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "literal",
    "loc": {
        "start": {
            "line": 1,
            "column": 24
        },
        "end": {
            "line": 1,
            "column": 31
        }
    },
    "Async_Hook_Id": 0,
    "Literal_Type": "StringLiteral",
    "Literal_Value_Type": "string",
    "Literal_Value": "[\"assert\"]"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "invokeFunPre",
    "loc": {
        "start": {
            "line": 1,
            "column": 16
        },
        "end": {
            "line": 1,
            "column": 32
        }
    },
    "Async_Hook_Id": 0,
    "Function_Name": "require",
    "iid": 3
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "endExpression",
    "loc": {
        "start": {
            "line": 1,
            "column": 24
        },
        "end": {
            "line": 1,
            "column": 31
        }
    },
    "Async_Hook_Id": 0,
    "Expression_Type": "JSConstantString"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "invokeFun",
    "loc": {
        "start": {
            "line": 1,
            "column": 16
        },
        "end": {
            "line": 1,
            "column": 32
        }
    },
    "Async_Hook_Id": 0,
    "Function_Name": "require",
    "Tipo_Returned_Value": "function",
    "Returned_Value": "{\"result\":\"function ok(...args) {\\n  innerOk(ok, args.length, ...args);\\n}\"}",
    "iid": 3,
    "Runtime_ms": 2.4940920006483793
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "endExpression",
    "loc": {
        "start": {
            "line": 1,
            "column": 16
        },
        "end": {
            "line": 1,
            "column": 32
        }
    },
    "Async_Hook_Id": 0,
    "Expression_Type": "Call1"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "write",
    "loc": {
        "start": {
            "line": 1,
            "column": 1
        },
        "end": {
            "line": 1,
            "column": 32
        }
    },
    "Async_Hook_Id": 0,
    "Variable_Name": "assert",
    "Value_Type_Before_Write": "undefined",
    "Value_Before_Write": "[]",
    "Value_Type_After_Write": "function",
    "Value_After_Write": "{\"val\":\"function ok(...args) {\\n  innerOk(ok, args.length, ...args);\\n}\"}"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "startExpression",
    "loc": {
        "start": {
            "line": 2,
            "column": 44
        },
        "end": {
            "line": 2,
            "column": 74
        }
    },
    "Async_Hook_Id": 0,
    "Expression_Type": "Call1"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "startExpression",
    "loc": {
        "start": {
            "line": 2,
            "column": 44
        },
        "end": {
            "line": 2,
            "column": 50
        }
    },
    "Async_Hook_Id": 0,
    "Expression_Type": "JSReadCurrentFrameSlot"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "read",
    "loc": {
        "start": {
            "line": 2,
            "column": 44
        },
        "end": {
            "line": 2,
            "column": 50
        }
    },
    "Async_Hook_Id": 0,
    "Variable_Name": "require",
    "Type_Value_Read": "function",
    "val": "{\"val\":\"function require(path) {\\n      return mod.require(path);\\n    }\"}"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "endExpression",
    "loc": {
        "start": {
            "line": 2,
            "column": 44
        },
        "end": {
            "line": 2,
            "column": 50
        }
    },
    "Async_Hook_Id": 0,
    "Expression_Type": "JSReadCurrentFrameSlot"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "startExpression",
    "loc": {
        "start": {
            "line": 2,
            "column": 52
        },
        "end": {
            "line": 2,
            "column": 73
        }
    },
    "Async_Hook_Id": 0,
    "Expression_Type": "JSConstantString"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "literal",
    "loc": {
        "start": {
            "line": 2,
            "column": 52
        },
        "end": {
            "line": 2,
            "column": 73
        }
    },
    "Async_Hook_Id": 0,
    "Literal_Type": "StringLiteral",
    "Literal_Value_Type": "string",
    "Literal_Value": "[\"../arquivoPrincipal2\"]"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "invokeFunPre",
    "loc": {
        "start": {
            "line": 2,
            "column": 44
        },
        "end": {
            "line": 2,
            "column": 74
        }
    },
    "Async_Hook_Id": 0,
    "Function_Name": "require",
    "iid": 6
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "endExpression",
    "loc": {
        "start": {
            "line": 2,
            "column": 52
        },
        "end": {
            "line": 2,
            "column": 73
        }
    },
    "Async_Hook_Id": 0,
    "Expression_Type": "JSConstantString"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/arquivoPrincipal2.js",
    "Detected_Hook": "functionEnter",
    "loc": {
        "start": {
            "line": 1,
            "column": 1
        },
        "end": {
            "line": 25,
            "column": 30
        }
    },
    "Async_Hook_Id": 0,
    "Function_Name": "Anonymous Function ",
    "iid": 9
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/arquivoPrincipal2.js",
    "Detected_Hook": "awaitPost",
    "loc": {
        "start": {
            "line": 1,
            "column": 1
        },
        "end": {
            "line": 25,
            "column": 30
        }
    },
    "Async_Hook_Id": 0,
    "Statement_Type": "AutonomousFunctionExpression"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/arquivoPrincipal2.js",
    "Detected_Hook": "startExpression",
    "loc": {
        "start": {
            "line": 1,
            "column": 1
        },
        "end": {
            "line": 25,
            "column": 30
        }
    },
    "Async_Hook_Id": 0,
    "Expression_Type": "AutonomousFunctionExpression"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/arquivoPrincipal2.js",
    "Detected_Hook": "literal",
    "loc": {
        "start": {
            "line": 1,
            "column": 1
        },
        "end": {
            "line": 25,
            "column": 30
        }
    },
    "Async_Hook_Id": 0,
    "Literal_Type": "FunctionLiteral",
    "Literal_Value_Type": "function",
    "Literal_Value": "{\"val\":\"// Executar uma soma  e multiplicacao simples\\nfunction somarEdobrar(primeiro, segundo) {\\n    let resultado = primeiro + segundo;\\n    resultado = resultado*2;\\n    return resultado;\\n}\\n\\n// Executar uma subtracao e divisao simples\\nfunction subtrairEdividir(primeiro, segundo) {\\n    let resultado = primeiro - segundo;\\n    resultado = resultado/2;\\n    return resultado;\\n}\\n\\nmodule.exports = {\\n    somarEdobrar,\\n    subtrairEdividir\\n};\\n\\n\\n// respotafunc1 = somarEdobrar(8, 12);\\n// console.log(respotafunc1);\\n\\n// respotafunc2 = subtrairEdividir(20, 10);\\n// console.log(respotafunc2);\\n\"}"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/arquivoPrincipal2.js",
    "Detected_Hook": "endExpression",
    "loc": {
        "start": {
            "line": 1,
            "column": 1
        },
        "end": {
            "line": 25,
            "column": 30
        }
    },
    "Async_Hook_Id": 0,
    "Expression_Type": "AutonomousFunctionExpression"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/arquivoPrincipal2.js",
    "Detected_Hook": "functionExit",
    "loc": {
        "start": {
            "line": 1,
            "column": 1
        },
        "end": {
            "line": 25,
            "column": 30
        }
    },
    "Async_Hook_Id": 0,
    "Returned_Type": "function",
    "Returned_Value": "{\"returnVal\":\"// Executar uma soma  e multiplicacao simples\\nfunction somarEdobrar(primeiro, segundo) {\\n    let resultado = primeiro + segundo;\\n    resultado = resultado*2;\\n    return resultado;\\n}\\n\\n// Executar uma subtracao e divisao simples\\nfunction subtrairEdividir(primeiro, segundo) {\\n    let resultado = primeiro - segundo;\\n    resultado = resultado/2;\\n    return resultado;\\n}\\n\\nmodule.exports = {\\n    somarEdobrar,\\n    subtrairEdividir\\n};\\n\\n\\n// respotafunc1 = somarEdobrar(8, 12);\\n// console.log(respotafunc1);\\n\\n// respotafunc2 = subtrairEdividir(20, 10);\\n// console.log(respotafunc2);\\n\"}",
    "Excession_Occurred": {},
    "iid": 9,
    "Runtime_ms": 1.4375
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/arquivoPrincipal2.js",
    "Detected_Hook": "functionEnter",
    "loc": {
        "start": {
            "line": 1,
            "column": 1
        },
        "end": {
            "line": 25,
            "column": 30
        }
    },
    "Async_Hook_Id": 0,
    "Function_Name": "Anonymous Function ",
    "iid": 9
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/arquivoPrincipal2.js",
    "Detected_Hook": "literal",
    "loc": {
        "start": {
            "line": 2,
            "column": 1
        },
        "end": {
            "line": 6,
            "column": 1
        }
    },
    "Async_Hook_Id": 0,
    "Literal_Type": "FunctionLiteral",
    "Literal_Value_Type": "function",
    "Literal_Value": "{\"val\":\"function somarEdobrar(primeiro, segundo) {\\n    let resultado = primeiro + segundo;\\n    resultado = resultado*2;\\n    return resultado;\\n}\"}"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/arquivoPrincipal2.js",
    "Detected_Hook": "write",
    "loc": {
        "start": {
            "line": 2,
            "column": 1
        },
        "end": {
            "line": 6,
            "column": 1
        }
    },
    "Async_Hook_Id": 0,
    "Variable_Name": "somarEdobrar",
    "Value_Type_Before_Write": "undefined",
    "Value_Before_Write": "[]",
    "Value_Type_After_Write": "function",
    "Value_After_Write": "{\"val\":\"function somarEdobrar(primeiro, segundo) {\\n    let resultado = primeiro + segundo;\\n    resultado = resultado*2;\\n    return resultado;\\n}\"}"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/arquivoPrincipal2.js",
    "Detected_Hook": "literal",
    "loc": {
        "start": {
            "line": 9,
            "column": 1
        },
        "end": {
            "line": 13,
            "column": 1
        }
    },
    "Async_Hook_Id": 0,
    "Literal_Type": "FunctionLiteral",
    "Literal_Value_Type": "function",
    "Literal_Value": "{\"val\":\"function subtrairEdividir(primeiro, segundo) {\\n    let resultado = primeiro - segundo;\\n    resultado = resultado/2;\\n    return resultado;\\n}\"}"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/arquivoPrincipal2.js",
    "Detected_Hook": "write",
    "loc": {
        "start": {
            "line": 9,
            "column": 1
        },
        "end": {
            "line": 13,
            "column": 1
        }
    },
    "Async_Hook_Id": 0,
    "Variable_Name": "subtrairEdividir",
    "Value_Type_Before_Write": "undefined",
    "Value_Before_Write": "[]",
    "Value_Type_After_Write": "function",
    "Value_After_Write": "{\"val\":\"function subtrairEdividir(primeiro, segundo) {\\n    let resultado = primeiro - segundo;\\n    resultado = resultado/2;\\n    return resultado;\\n}\"}"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/arquivoPrincipal2.js",
    "Detected_Hook": "awaitPost",
    "loc": {
        "start": {
            "line": 15,
            "column": 1
        },
        "end": {
            "line": 18,
            "column": 1
        }
    },
    "Async_Hook_Id": 0,
    "Statement_Type": "WriteProperty"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/arquivoPrincipal2.js",
    "Detected_Hook": "startExpression",
    "loc": {
        "start": {
            "line": 15,
            "column": 1
        },
        "end": {
            "line": 18,
            "column": 1
        }
    },
    "Async_Hook_Id": 0,
    "Expression_Type": "WriteProperty"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/arquivoPrincipal2.js",
    "Detected_Hook": "startExpression",
    "loc": {
        "start": {
            "line": 15,
            "column": 1
        },
        "end": {
            "line": 15,
            "column": 6
        }
    },
    "Async_Hook_Id": 0,
    "Expression_Type": "JSReadCurrentFrameSlot"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/arquivoPrincipal2.js",
    "Detected_Hook": "read",
    "loc": {
        "start": {
            "line": 15,
            "column": 1
        },
        "end": {
            "line": 15,
            "column": 6
        }
    },
    "Async_Hook_Id": 0,
    "Variable_Name": "module",
    "Type_Value_Read": "object",
    "val": "[{\"id\":\"1\",\"path\":\"2\",\"exports\":\"3\",\"parent\":\"4\",\"filename\":\"1\",\"loaded\":false,\"children\":\"5\",\"paths\":\"6\"},\"/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/arquivoPrincipal2.js\",\"/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha\",{},{\"id\":\"7\",\"path\":\"8\",\"exports\":\"9\",\"filename\":\"7\",\"loaded\":false,\"children\":\"10\",\"paths\":\"11\"},[],[\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\"],\"/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js\",\"/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste\",{},[\"0\"],[\"19\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\"],\"/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/node_modules\",\"/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/node_modules\",\"/home/pedroubuntu/coisasNodeRT/datasetNodeRT/node_modules\",\"/home/pedroubuntu/coisasNodeRT/node_modules\",\"/home/pedroubuntu/node_modules\",\"/home/node_modules\",\"/node_modules\",\"/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/node_modules\"]"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/arquivoPrincipal2.js",
    "Detected_Hook": "endExpression",
    "loc": {
        "start": {
            "line": 15,
            "column": 1
        },
        "end": {
            "line": 15,
            "column": 6
        }
    },
    "Async_Hook_Id": 0,
    "Expression_Type": "JSReadCurrentFrameSlot"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/arquivoPrincipal2.js",
    "Detected_Hook": "startExpression",
    "loc": {
        "start": {
            "line": 15,
            "column": 18
        },
        "end": {
            "line": 18,
            "column": 1
        }
    },
    "Async_Hook_Id": 0,
    "Expression_Type": "ObjectLiteral"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/arquivoPrincipal2.js",
    "Detected_Hook": "startExpression",
    "loc": {
        "start": {
            "line": 16,
            "column": 5
        },
        "end": {
            "line": 16,
            "column": 16
        }
    },
    "Async_Hook_Id": 0,
    "Expression_Type": "JSReadCurrentFrameSlot"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/arquivoPrincipal2.js",
    "Detected_Hook": "read",
    "loc": {
        "start": {
            "line": 16,
            "column": 5
        },
        "end": {
            "line": 16,
            "column": 16
        }
    },
    "Async_Hook_Id": 0,
    "Variable_Name": "somarEdobrar",
    "Type_Value_Read": "function",
    "val": "{\"val\":\"function somarEdobrar(primeiro, segundo) {\\n    let resultado = primeiro + segundo;\\n    resultado = resultado*2;\\n    return resultado;\\n}\"}"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/arquivoPrincipal2.js",
    "Detected_Hook": "endExpression",
    "loc": {
        "start": {
            "line": 16,
            "column": 5
        },
        "end": {
            "line": 16,
            "column": 16
        }
    },
    "Async_Hook_Id": 0,
    "Expression_Type": "JSReadCurrentFrameSlot"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/arquivoPrincipal2.js",
    "Detected_Hook": "startExpression",
    "loc": {
        "start": {
            "line": 17,
            "column": 5
        },
        "end": {
            "line": 17,
            "column": 20
        }
    },
    "Async_Hook_Id": 0,
    "Expression_Type": "JSReadCurrentFrameSlot"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/arquivoPrincipal2.js",
    "Detected_Hook": "read",
    "loc": {
        "start": {
            "line": 17,
            "column": 5
        },
        "end": {
            "line": 17,
            "column": 20
        }
    },
    "Async_Hook_Id": 0,
    "Variable_Name": "subtrairEdividir",
    "Type_Value_Read": "function",
    "val": "{\"val\":\"function subtrairEdividir(primeiro, segundo) {\\n    let resultado = primeiro - segundo;\\n    resultado = resultado/2;\\n    return resultado;\\n}\"}"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/arquivoPrincipal2.js",
    "Detected_Hook": "endExpression",
    "loc": {
        "start": {
            "line": 17,
            "column": 5
        },
        "end": {
            "line": 17,
            "column": 20
        }
    },
    "Async_Hook_Id": 0,
    "Expression_Type": "JSReadCurrentFrameSlot"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/arquivoPrincipal2.js",
    "Detected_Hook": "literal",
    "loc": {
        "start": {
            "line": 15,
            "column": 18
        },
        "end": {
            "line": 18,
            "column": 1
        }
    },
    "Async_Hook_Id": 0,
    "Literal_Type": "ObjectLiteral",
    "Literal_Value_Type": "object",
    "Literal_Value": "[{}]"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/arquivoPrincipal2.js",
    "Detected_Hook": "putFieldPre",
    "loc": {
        "start": {
            "line": 15,
            "column": 1
        },
        "end": {
            "line": 18,
            "column": 1
        }
    },
    "Async_Hook_Id": 0,
    "Written_Object": "couldnt access base",
    "New_Value_Type": "object",
    "New_Value": "[{}]"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/arquivoPrincipal2.js",
    "Detected_Hook": "endExpression",
    "loc": {
        "start": {
            "line": 15,
            "column": 18
        },
        "end": {
            "line": 18,
            "column": 1
        }
    },
    "Async_Hook_Id": 0,
    "Expression_Type": "ObjectLiteral"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/arquivoPrincipal2.js",
    "Detected_Hook": "endExpression",
    "loc": {
        "start": {
            "line": 15,
            "column": 1
        },
        "end": {
            "line": 18,
            "column": 1
        }
    },
    "Async_Hook_Id": 0,
    "Expression_Type": "WriteProperty"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/arquivoPrincipal2.js",
    "Detected_Hook": "functionExit",
    "loc": {
        "start": {
            "line": 1,
            "column": 1
        },
        "end": {
            "line": 25,
            "column": 30
        }
    },
    "Async_Hook_Id": 0,
    "Returned_Type": "undefined",
    "Returned_Value": "[]",
    "Excession_Occurred": {},
    "iid": 9,
    "Runtime_ms": 27.09357599914074
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "invokeFun",
    "loc": {
        "start": {
            "line": 2,
            "column": 44
        },
        "end": {
            "line": 2,
            "column": 74
        }
    },
    "Async_Hook_Id": 0,
    "Function_Name": "require",
    "Tipo_Returned_Value": "object",
    "Returned_Value": "[{}]",
    "iid": 6,
    "Runtime_ms": 33.12064900062978
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "endExpression",
    "loc": {
        "start": {
            "line": 2,
            "column": 44
        },
        "end": {
            "line": 2,
            "column": 74
        }
    },
    "Async_Hook_Id": 0,
    "Expression_Type": "Call1"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "startExpression",
    "loc": {
        "start": {
            "line": 2,
            "column": 9
        },
        "end": {
            "line": 2,
            "column": 20
        }
    },
    "Async_Hook_Id": 0,
    "Expression_Type": "JSWriteCurrentFrameSlot"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "startExpression",
    "loc": {
        "start": {
            "line": 2,
            "column": 9
        },
        "end": {
            "line": 2,
            "column": 20
        }
    },
    "Async_Hook_Id": 0,
    "Expression_Type": "Property"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "getField",
    "loc": {
        "start": {
            "line": 2,
            "column": 9
        },
        "end": {
            "line": 2,
            "column": 20
        }
    },
    "Async_Hook_Id": 0,
    "Accessed_Object": "couldnt access base",
    "Accessed_Value_Type": "function",
    "Accessed_Value": "{\"val\":\"function somarEdobrar(primeiro, segundo) {\\n    let resultado = primeiro + segundo;\\n    resultado = resultado*2;\\n    return resultado;\\n}\"}"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "endExpression",
    "loc": {
        "start": {
            "line": 2,
            "column": 9
        },
        "end": {
            "line": 2,
            "column": 20
        }
    },
    "Async_Hook_Id": 0,
    "Expression_Type": "Property"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "write",
    "loc": {
        "start": {
            "line": 2,
            "column": 9
        },
        "end": {
            "line": 2,
            "column": 20
        }
    },
    "Async_Hook_Id": 0,
    "Variable_Name": "somarEdobrar",
    "Value_Type_Before_Write": "undefined",
    "Value_Before_Write": "[]",
    "Value_Type_After_Write": "function",
    "Value_After_Write": "{\"val\":\"function somarEdobrar(primeiro, segundo) {\\n    let resultado = primeiro + segundo;\\n    resultado = resultado*2;\\n    return resultado;\\n}\"}"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "endExpression",
    "loc": {
        "start": {
            "line": 2,
            "column": 9
        },
        "end": {
            "line": 2,
            "column": 20
        }
    },
    "Async_Hook_Id": 0,
    "Expression_Type": "JSWriteCurrentFrameSlot"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "startExpression",
    "loc": {
        "start": {
            "line": 2,
            "column": 23
        },
        "end": {
            "line": 2,
            "column": 38
        }
    },
    "Async_Hook_Id": 0,
    "Expression_Type": "JSWriteCurrentFrameSlot"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "startExpression",
    "loc": {
        "start": {
            "line": 2,
            "column": 23
        },
        "end": {
            "line": 2,
            "column": 38
        }
    },
    "Async_Hook_Id": 0,
    "Expression_Type": "Property"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "getField",
    "loc": {
        "start": {
            "line": 2,
            "column": 23
        },
        "end": {
            "line": 2,
            "column": 38
        }
    },
    "Async_Hook_Id": 0,
    "Accessed_Object": "couldnt access base",
    "Accessed_Value_Type": "function",
    "Accessed_Value": "{\"val\":\"function subtrairEdividir(primeiro, segundo) {\\n    let resultado = primeiro - segundo;\\n    resultado = resultado/2;\\n    return resultado;\\n}\"}"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "endExpression",
    "loc": {
        "start": {
            "line": 2,
            "column": 23
        },
        "end": {
            "line": 2,
            "column": 38
        }
    },
    "Async_Hook_Id": 0,
    "Expression_Type": "Property"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "write",
    "loc": {
        "start": {
            "line": 2,
            "column": 23
        },
        "end": {
            "line": 2,
            "column": 38
        }
    },
    "Async_Hook_Id": 0,
    "Variable_Name": "subtrairEdividir",
    "Value_Type_Before_Write": "undefined",
    "Value_Before_Write": "[]",
    "Value_Type_After_Write": "function",
    "Value_After_Write": "{\"val\":\"function subtrairEdividir(primeiro, segundo) {\\n    let resultado = primeiro - segundo;\\n    resultado = resultado/2;\\n    return resultado;\\n}\"}"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "endExpression",
    "loc": {
        "start": {
            "line": 2,
            "column": 23
        },
        "end": {
            "line": 2,
            "column": 38
        }
    },
    "Async_Hook_Id": 0,
    "Expression_Type": "JSWriteCurrentFrameSlot"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "awaitPost",
    "loc": {
        "start": {
            "line": 5,
            "column": 1
        },
        "end": {
            "line": 16,
            "column": 2
        }
    },
    "Async_Hook_Id": 0,
    "Statement_Type": "CallN"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "startExpression",
    "loc": {
        "start": {
            "line": 5,
            "column": 1
        },
        "end": {
            "line": 16,
            "column": 2
        }
    },
    "Async_Hook_Id": 0,
    "Expression_Type": "CallN"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "startExpression",
    "loc": {
        "start": {
            "line": 5,
            "column": 1
        },
        "end": {
            "line": 5,
            "column": 8
        }
    },
    "Async_Hook_Id": 0,
    "Expression_Type": "GlobalProperty"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "read",
    "loc": {
        "start": {
            "line": 5,
            "column": 1
        },
        "end": {
            "line": 5,
            "column": 8
        }
    },
    "Async_Hook_Id": 0,
    "Variable_Name": "describe",
    "Type_Value_Read": "function",
    "val": "{\"val\":\"function (title, fn) {\\n      return common.suite.create({\\n        title,\\n        file,\\n        fn\\n      });\\n    }\"}"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "endExpression",
    "loc": {
        "start": {
            "line": 5,
            "column": 1
        },
        "end": {
            "line": 5,
            "column": 8
        }
    },
    "Async_Hook_Id": 0,
    "Expression_Type": "GlobalProperty"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "startExpression",
    "loc": {
        "start": {
            "line": 5,
            "column": 10
        },
        "end": {
            "line": 5,
            "column": 36
        }
    },
    "Async_Hook_Id": 0,
    "Expression_Type": "JSConstantString"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "literal",
    "loc": {
        "start": {
            "line": 5,
            "column": 10
        },
        "end": {
            "line": 5,
            "column": 36
        }
    },
    "Async_Hook_Id": 0,
    "Literal_Type": "StringLiteral",
    "Literal_Value_Type": "string",
    "Literal_Value": "[\"Testes da Primeira funcao\"]"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "endExpression",
    "loc": {
        "start": {
            "line": 5,
            "column": 10
        },
        "end": {
            "line": 5,
            "column": 36
        }
    },
    "Async_Hook_Id": 0,
    "Expression_Type": "JSConstantString"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "startExpression",
    "loc": {
        "start": {
            "line": 5,
            "column": 39
        },
        "end": {
            "line": 16,
            "column": 1
        }
    },
    "Async_Hook_Id": 0,
    "Expression_Type": "DefaultFunctionExpression"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "literal",
    "loc": {
        "start": {
            "line": 5,
            "column": 39
        },
        "end": {
            "line": 16,
            "column": 1
        }
    },
    "Async_Hook_Id": 0,
    "Literal_Type": "FunctionLiteral",
    "Literal_Value_Type": "function",
    "Literal_Value": "{\"val\":\"function () {\\n    it('somarEdobrar com x e y positivos', function () {\\n        const resultado1 = somarEdobrar(8, 12);\\n        assert.equal(resultado1, 40);\\n    });\\n\\n    it('somarEdobrar com x e y negativos', function () {\\n        const resultado2 = somarEdobrar(-10, -20);\\n        assert.equal(resultado2, -60);\\n    });\\n\\n}\"}"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "invokeFunPre",
    "loc": {
        "start": {
            "line": 5,
            "column": 1
        },
        "end": {
            "line": 16,
            "column": 2
        }
    },
    "Async_Hook_Id": 0,
    "Function_Name": "Anonymous Function ",
    "iid": 19
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "endExpression",
    "loc": {
        "start": {
            "line": 5,
            "column": 39
        },
        "end": {
            "line": 16,
            "column": 1
        }
    },
    "Async_Hook_Id": 0,
    "Expression_Type": "DefaultFunctionExpression"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "functionEnter",
    "loc": {
        "start": {
            "line": 5,
            "column": 39
        },
        "end": {
            "line": 16,
            "column": 1
        }
    },
    "Async_Hook_Id": 0,
    "Function_Name": "Anonymous Function ",
    "iid": 22
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "awaitPost",
    "loc": {
        "start": {
            "line": 6,
            "column": 5
        },
        "end": {
            "line": 9,
            "column": 6
        }
    },
    "Async_Hook_Id": 0,
    "Statement_Type": "CallN"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "startExpression",
    "loc": {
        "start": {
            "line": 6,
            "column": 5
        },
        "end": {
            "line": 9,
            "column": 6
        }
    },
    "Async_Hook_Id": 0,
    "Expression_Type": "CallN"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "startExpression",
    "loc": {
        "start": {
            "line": 6,
            "column": 5
        },
        "end": {
            "line": 6,
            "column": 6
        }
    },
    "Async_Hook_Id": 0,
    "Expression_Type": "GlobalProperty"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "read",
    "loc": {
        "start": {
            "line": 6,
            "column": 5
        },
        "end": {
            "line": 6,
            "column": 6
        }
    },
    "Async_Hook_Id": 0,
    "Variable_Name": "it",
    "Type_Value_Read": "function",
    "val": "{\"val\":\"function (title, fn) {\\n      var suite = suites[0];\\n      if (suite.isPending()) {\\n        fn = null;\\n      }\\n      var test = new Test(title, fn);\\n      test.file = file;\\n      suite.addTest(test);\\n      return test;\\n    }\"}"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "endExpression",
    "loc": {
        "start": {
            "line": 6,
            "column": 5
        },
        "end": {
            "line": 6,
            "column": 6
        }
    },
    "Async_Hook_Id": 0,
    "Expression_Type": "GlobalProperty"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "startExpression",
    "loc": {
        "start": {
            "line": 6,
            "column": 8
        },
        "end": {
            "line": 6,
            "column": 41
        }
    },
    "Async_Hook_Id": 0,
    "Expression_Type": "JSConstantString"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "literal",
    "loc": {
        "start": {
            "line": 6,
            "column": 8
        },
        "end": {
            "line": 6,
            "column": 41
        }
    },
    "Async_Hook_Id": 0,
    "Literal_Type": "StringLiteral",
    "Literal_Value_Type": "string",
    "Literal_Value": "[\"somarEdobrar com x e y positivos\"]"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "endExpression",
    "loc": {
        "start": {
            "line": 6,
            "column": 8
        },
        "end": {
            "line": 6,
            "column": 41
        }
    },
    "Async_Hook_Id": 0,
    "Expression_Type": "JSConstantString"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "startExpression",
    "loc": {
        "start": {
            "line": 6,
            "column": 44
        },
        "end": {
            "line": 9,
            "column": 5
        }
    },
    "Async_Hook_Id": 0,
    "Expression_Type": "DefaultFunctionExpression"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "literal",
    "loc": {
        "start": {
            "line": 6,
            "column": 44
        },
        "end": {
            "line": 9,
            "column": 5
        }
    },
    "Async_Hook_Id": 0,
    "Literal_Type": "FunctionLiteral",
    "Literal_Value_Type": "function",
    "Literal_Value": "{\"val\":\"function () {\\n        const resultado1 = somarEdobrar(8, 12);\\n        assert.equal(resultado1, 40);\\n    }\"}"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "invokeFunPre",
    "loc": {
        "start": {
            "line": 6,
            "column": 5
        },
        "end": {
            "line": 9,
            "column": 6
        }
    },
    "Async_Hook_Id": 0,
    "Function_Name": "Anonymous Function ",
    "iid": 24
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "endExpression",
    "loc": {
        "start": {
            "line": 6,
            "column": 44
        },
        "end": {
            "line": 9,
            "column": 5
        }
    },
    "Async_Hook_Id": 0,
    "Expression_Type": "DefaultFunctionExpression"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "invokeFun",
    "loc": {
        "start": {
            "line": 6,
            "column": 5
        },
        "end": {
            "line": 9,
            "column": 6
        }
    },
    "Async_Hook_Id": 0,
    "Function_Name": "Anonymous Function ",
    "Tipo_Returned_Value": "object",
    "Returned_Value": "[{\"type\":\"1\",\"title\":\"2\",\"body\":\"3\",\"async\":0,\"sync\":true,\"_timeout\":2000,\"_slow\":75,\"_retries\":-1,\"timedOut\":false,\"_currentRetry\":0,\"pending\":false,\"file\":\"4\",\"parent\":\"5\",\"ctx\":\"6\"},\"test\",\"somarEdobrar com x e y positivos\",\"function () {\\n        const resultado1 = somarEdobrar(8, 12);\\n        assert.equal(resultado1, 40);\\n    }\",\"/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js\",{\"title\":\"7\",\"ctx\":\"6\",\"suites\":\"8\",\"tests\":\"9\",\"root\":false,\"pending\":false,\"_retries\":-1,\"_beforeEach\":\"10\",\"_beforeAll\":\"11\",\"_afterEach\":\"12\",\"_afterAll\":\"13\",\"_timeout\":2000,\"_slow\":75,\"_bail\":false,\"_onlyTests\":\"14\",\"_onlySuites\":\"15\",\"delayed\":false,\"parent\":\"16\",\"file\":\"4\"},{},\"Testes da Primeira funcao\",[],[\"0\"],[],[],[],[],[],[],{\"title\":\"17\",\"ctx\":\"18\",\"suites\":\"19\",\"tests\":\"20\",\"root\":true,\"pending\":false,\"_retries\":-1,\"_beforeEach\":\"21\",\"_beforeAll\":\"22\",\"_afterEach\":\"23\",\"_afterAll\":\"24\",\"_timeout\":2000,\"_slow\":75,\"_bail\":false,\"_onlyTests\":\"25\",\"_onlySuites\":\"26\",\"delayed\":false,\"_events\":\"27\",\"_eventsCount\":1},\"\",{},[\"5\"],[],[],[],[],[],[],[],{\"pre-require\":\"28\"},[null,null]]",
    "iid": 24,
    "Runtime_ms": 4.314931999891996
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "endExpression",
    "loc": {
        "start": {
            "line": 6,
            "column": 5
        },
        "end": {
            "line": 9,
            "column": 6
        }
    },
    "Async_Hook_Id": 0,
    "Expression_Type": "CallN"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "awaitPost",
    "loc": {
        "start": {
            "line": 11,
            "column": 5
        },
        "end": {
            "line": 14,
            "column": 6
        }
    },
    "Async_Hook_Id": 0,
    "Statement_Type": "CallN"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "startExpression",
    "loc": {
        "start": {
            "line": 11,
            "column": 5
        },
        "end": {
            "line": 14,
            "column": 6
        }
    },
    "Async_Hook_Id": 0,
    "Expression_Type": "CallN"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "startExpression",
    "loc": {
        "start": {
            "line": 11,
            "column": 5
        },
        "end": {
            "line": 11,
            "column": 6
        }
    },
    "Async_Hook_Id": 0,
    "Expression_Type": "GlobalProperty"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "read",
    "loc": {
        "start": {
            "line": 11,
            "column": 5
        },
        "end": {
            "line": 11,
            "column": 6
        }
    },
    "Async_Hook_Id": 0,
    "Variable_Name": "it",
    "Type_Value_Read": "function",
    "val": "{\"val\":\"function (title, fn) {\\n      var suite = suites[0];\\n      if (suite.isPending()) {\\n        fn = null;\\n      }\\n      var test = new Test(title, fn);\\n      test.file = file;\\n      suite.addTest(test);\\n      return test;\\n    }\"}"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "endExpression",
    "loc": {
        "start": {
            "line": 11,
            "column": 5
        },
        "end": {
            "line": 11,
            "column": 6
        }
    },
    "Async_Hook_Id": 0,
    "Expression_Type": "GlobalProperty"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "startExpression",
    "loc": {
        "start": {
            "line": 11,
            "column": 8
        },
        "end": {
            "line": 11,
            "column": 41
        }
    },
    "Async_Hook_Id": 0,
    "Expression_Type": "JSConstantString"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "literal",
    "loc": {
        "start": {
            "line": 11,
            "column": 8
        },
        "end": {
            "line": 11,
            "column": 41
        }
    },
    "Async_Hook_Id": 0,
    "Literal_Type": "StringLiteral",
    "Literal_Value_Type": "string",
    "Literal_Value": "[\"somarEdobrar com x e y negativos\"]"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "endExpression",
    "loc": {
        "start": {
            "line": 11,
            "column": 8
        },
        "end": {
            "line": 11,
            "column": 41
        }
    },
    "Async_Hook_Id": 0,
    "Expression_Type": "JSConstantString"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "startExpression",
    "loc": {
        "start": {
            "line": 11,
            "column": 44
        },
        "end": {
            "line": 14,
            "column": 5
        }
    },
    "Async_Hook_Id": 0,
    "Expression_Type": "DefaultFunctionExpression"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "literal",
    "loc": {
        "start": {
            "line": 11,
            "column": 44
        },
        "end": {
            "line": 14,
            "column": 5
        }
    },
    "Async_Hook_Id": 0,
    "Literal_Type": "FunctionLiteral",
    "Literal_Value_Type": "function",
    "Literal_Value": "{\"val\":\"function () {\\n        const resultado2 = somarEdobrar(-10, -20);\\n        assert.equal(resultado2, -60);\\n    }\"}"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "invokeFunPre",
    "loc": {
        "start": {
            "line": 11,
            "column": 5
        },
        "end": {
            "line": 14,
            "column": 6
        }
    },
    "Async_Hook_Id": 0,
    "Function_Name": "Anonymous Function ",
    "iid": 28
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "endExpression",
    "loc": {
        "start": {
            "line": 11,
            "column": 44
        },
        "end": {
            "line": 14,
            "column": 5
        }
    },
    "Async_Hook_Id": 0,
    "Expression_Type": "DefaultFunctionExpression"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "invokeFun",
    "loc": {
        "start": {
            "line": 11,
            "column": 5
        },
        "end": {
            "line": 14,
            "column": 6
        }
    },
    "Async_Hook_Id": 0,
    "Function_Name": "Anonymous Function ",
    "Tipo_Returned_Value": "object",
    "Returned_Value": "[{\"type\":\"1\",\"title\":\"2\",\"body\":\"3\",\"async\":0,\"sync\":true,\"_timeout\":2000,\"_slow\":75,\"_retries\":-1,\"timedOut\":false,\"_currentRetry\":0,\"pending\":false,\"file\":\"4\",\"parent\":\"5\",\"ctx\":\"6\"},\"test\",\"somarEdobrar com x e y negativos\",\"function () {\\n        const resultado2 = somarEdobrar(-10, -20);\\n        assert.equal(resultado2, -60);\\n    }\",\"/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js\",{\"title\":\"7\",\"ctx\":\"6\",\"suites\":\"8\",\"tests\":\"9\",\"root\":false,\"pending\":false,\"_retries\":-1,\"_beforeEach\":\"10\",\"_beforeAll\":\"11\",\"_afterEach\":\"12\",\"_afterAll\":\"13\",\"_timeout\":2000,\"_slow\":75,\"_bail\":false,\"_onlyTests\":\"14\",\"_onlySuites\":\"15\",\"delayed\":false,\"parent\":\"16\",\"file\":\"4\"},{},\"Testes da Primeira funcao\",[],[\"17\",\"0\"],[],[],[],[],[],[],{\"title\":\"18\",\"ctx\":\"19\",\"suites\":\"20\",\"tests\":\"21\",\"root\":true,\"pending\":false,\"_retries\":-1,\"_beforeEach\":\"22\",\"_beforeAll\":\"23\",\"_afterEach\":\"24\",\"_afterAll\":\"25\",\"_timeout\":2000,\"_slow\":75,\"_bail\":false,\"_onlyTests\":\"26\",\"_onlySuites\":\"27\",\"delayed\":false,\"_events\":\"28\",\"_eventsCount\":1},{\"type\":\"1\",\"title\":\"29\",\"body\":\"30\",\"async\":0,\"sync\":true,\"_timeout\":2000,\"_slow\":75,\"_retries\":-1,\"timedOut\":false,\"_currentRetry\":0,\"pending\":false,\"file\":\"4\",\"parent\":\"5\",\"ctx\":\"6\"},\"\",{},[\"5\"],[],[],[],[],[],[],[],{\"pre-require\":\"31\"},\"somarEdobrar com x e y positivos\",\"function () {\\n        const resultado1 = somarEdobrar(8, 12);\\n        assert.equal(resultado1, 40);\\n    }\",[null,null]]",
    "iid": 28,
    "Runtime_ms": 1.2799600008875132
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "endExpression",
    "loc": {
        "start": {
            "line": 11,
            "column": 5
        },
        "end": {
            "line": 14,
            "column": 6
        }
    },
    "Async_Hook_Id": 0,
    "Expression_Type": "CallN"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "functionExit",
    "loc": {
        "start": {
            "line": 5,
            "column": 39
        },
        "end": {
            "line": 16,
            "column": 1
        }
    },
    "Async_Hook_Id": 0,
    "Returned_Type": "undefined",
    "Returned_Value": "[]",
    "Excession_Occurred": {},
    "iid": 22,
    "Runtime_ms": 23.91227399930358
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "invokeFun",
    "loc": {
        "start": {
            "line": 5,
            "column": 1
        },
        "end": {
            "line": 16,
            "column": 2
        }
    },
    "Async_Hook_Id": 0,
    "Function_Name": "Anonymous Function ",
    "Tipo_Returned_Value": "object",
    "Returned_Value": "[{\"title\":\"1\",\"ctx\":\"2\",\"suites\":\"3\",\"tests\":\"4\",\"root\":false,\"pending\":false,\"_retries\":-1,\"_beforeEach\":\"5\",\"_beforeAll\":\"6\",\"_afterEach\":\"7\",\"_afterAll\":\"8\",\"_timeout\":2000,\"_slow\":75,\"_bail\":false,\"_onlyTests\":\"9\",\"_onlySuites\":\"10\",\"delayed\":false,\"parent\":\"11\",\"file\":\"12\"},\"Testes da Primeira funcao\",{},[],[\"13\",\"14\"],[],[],[],[],[],[],{\"title\":\"15\",\"ctx\":\"16\",\"suites\":\"17\",\"tests\":\"18\",\"root\":true,\"pending\":false,\"_retries\":-1,\"_beforeEach\":\"19\",\"_beforeAll\":\"20\",\"_afterEach\":\"21\",\"_afterAll\":\"22\",\"_timeout\":2000,\"_slow\":75,\"_bail\":false,\"_onlyTests\":\"23\",\"_onlySuites\":\"24\",\"delayed\":false,\"_events\":\"25\",\"_eventsCount\":1},\"/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js\",{\"type\":\"26\",\"title\":\"27\",\"body\":\"28\",\"async\":0,\"sync\":true,\"_timeout\":2000,\"_slow\":75,\"_retries\":-1,\"timedOut\":false,\"_currentRetry\":0,\"pending\":false,\"file\":\"12\",\"parent\":\"0\",\"ctx\":\"2\"},{\"type\":\"26\",\"title\":\"29\",\"body\":\"30\",\"async\":0,\"sync\":true,\"_timeout\":2000,\"_slow\":75,\"_retries\":-1,\"timedOut\":false,\"_currentRetry\":0,\"pending\":false,\"file\":\"12\",\"parent\":\"0\",\"ctx\":\"2\"},\"\",{},[\"0\"],[],[],[],[],[],[],[],{\"pre-require\":\"31\"},\"test\",\"somarEdobrar com x e y positivos\",\"function () {\\n        const resultado1 = somarEdobrar(8, 12);\\n        assert.equal(resultado1, 40);\\n    }\",\"somarEdobrar com x e y negativos\",\"function () {\\n        const resultado2 = somarEdobrar(-10, -20);\\n        assert.equal(resultado2, -60);\\n    }\",[null,null]]",
    "iid": 19,
    "Runtime_ms": 28.83942199870944
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "endExpression",
    "loc": {
        "start": {
            "line": 5,
            "column": 1
        },
        "end": {
            "line": 16,
            "column": 2
        }
    },
    "Async_Hook_Id": 0,
    "Expression_Type": "CallN"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "awaitPost",
    "loc": {
        "start": {
            "line": 19,
            "column": 1
        },
        "end": {
            "line": 30,
            "column": 2
        }
    },
    "Async_Hook_Id": 0,
    "Statement_Type": "CallN"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "startExpression",
    "loc": {
        "start": {
            "line": 19,
            "column": 1
        },
        "end": {
            "line": 30,
            "column": 2
        }
    },
    "Async_Hook_Id": 0,
    "Expression_Type": "CallN"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "startExpression",
    "loc": {
        "start": {
            "line": 19,
            "column": 1
        },
        "end": {
            "line": 19,
            "column": 8
        }
    },
    "Async_Hook_Id": 0,
    "Expression_Type": "GlobalProperty"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "read",
    "loc": {
        "start": {
            "line": 19,
            "column": 1
        },
        "end": {
            "line": 19,
            "column": 8
        }
    },
    "Async_Hook_Id": 0,
    "Variable_Name": "describe",
    "Type_Value_Read": "function",
    "val": "{\"val\":\"function (title, fn) {\\n      return common.suite.create({\\n        title,\\n        file,\\n        fn\\n      });\\n    }\"}"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "endExpression",
    "loc": {
        "start": {
            "line": 19,
            "column": 1
        },
        "end": {
            "line": 19,
            "column": 8
        }
    },
    "Async_Hook_Id": 0,
    "Expression_Type": "GlobalProperty"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "startExpression",
    "loc": {
        "start": {
            "line": 19,
            "column": 10
        },
        "end": {
            "line": 19,
            "column": 35
        }
    },
    "Async_Hook_Id": 0,
    "Expression_Type": "JSConstantString"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "literal",
    "loc": {
        "start": {
            "line": 19,
            "column": 10
        },
        "end": {
            "line": 19,
            "column": 35
        }
    },
    "Async_Hook_Id": 0,
    "Literal_Type": "StringLiteral",
    "Literal_Value_Type": "string",
    "Literal_Value": "[\"Testes da Segunda funcao\"]"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "endExpression",
    "loc": {
        "start": {
            "line": 19,
            "column": 10
        },
        "end": {
            "line": 19,
            "column": 35
        }
    },
    "Async_Hook_Id": 0,
    "Expression_Type": "JSConstantString"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "startExpression",
    "loc": {
        "start": {
            "line": 19,
            "column": 38
        },
        "end": {
            "line": 30,
            "column": 1
        }
    },
    "Async_Hook_Id": 0,
    "Expression_Type": "DefaultFunctionExpression"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "literal",
    "loc": {
        "start": {
            "line": 19,
            "column": 38
        },
        "end": {
            "line": 30,
            "column": 1
        }
    },
    "Async_Hook_Id": 0,
    "Literal_Type": "FunctionLiteral",
    "Literal_Value_Type": "function",
    "Literal_Value": "{\"val\":\"function () {\\n    it('subtrairEdividir com x e y positivos', function () {\\n        const resultado1 = subtrairEdividir(20, 10);\\n        assert.equal(resultado1, 5);\\n    });\\n\\n    it('subtrairEdividir com x e y negativos', function () {\\n        const resultado1 = subtrairEdividir(-30, -8);\\n        assert.equal(resultado1, -11);\\n    });\\n\\n}\"}"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "invokeFunPre",
    "loc": {
        "start": {
            "line": 19,
            "column": 1
        },
        "end": {
            "line": 30,
            "column": 2
        }
    },
    "Async_Hook_Id": 0,
    "Function_Name": "Anonymous Function ",
    "iid": 32
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "endExpression",
    "loc": {
        "start": {
            "line": 19,
            "column": 38
        },
        "end": {
            "line": 30,
            "column": 1
        }
    },
    "Async_Hook_Id": 0,
    "Expression_Type": "DefaultFunctionExpression"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "functionEnter",
    "loc": {
        "start": {
            "line": 19,
            "column": 38
        },
        "end": {
            "line": 30,
            "column": 1
        }
    },
    "Async_Hook_Id": 0,
    "Function_Name": "Anonymous Function ",
    "iid": 35
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "awaitPost",
    "loc": {
        "start": {
            "line": 20,
            "column": 5
        },
        "end": {
            "line": 23,
            "column": 6
        }
    },
    "Async_Hook_Id": 0,
    "Statement_Type": "CallN"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "startExpression",
    "loc": {
        "start": {
            "line": 20,
            "column": 5
        },
        "end": {
            "line": 23,
            "column": 6
        }
    },
    "Async_Hook_Id": 0,
    "Expression_Type": "CallN"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "startExpression",
    "loc": {
        "start": {
            "line": 20,
            "column": 5
        },
        "end": {
            "line": 20,
            "column": 6
        }
    },
    "Async_Hook_Id": 0,
    "Expression_Type": "GlobalProperty"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "read",
    "loc": {
        "start": {
            "line": 20,
            "column": 5
        },
        "end": {
            "line": 20,
            "column": 6
        }
    },
    "Async_Hook_Id": 0,
    "Variable_Name": "it",
    "Type_Value_Read": "function",
    "val": "{\"val\":\"function (title, fn) {\\n      var suite = suites[0];\\n      if (suite.isPending()) {\\n        fn = null;\\n      }\\n      var test = new Test(title, fn);\\n      test.file = file;\\n      suite.addTest(test);\\n      return test;\\n    }\"}"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "endExpression",
    "loc": {
        "start": {
            "line": 20,
            "column": 5
        },
        "end": {
            "line": 20,
            "column": 6
        }
    },
    "Async_Hook_Id": 0,
    "Expression_Type": "GlobalProperty"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "startExpression",
    "loc": {
        "start": {
            "line": 20,
            "column": 8
        },
        "end": {
            "line": 20,
            "column": 45
        }
    },
    "Async_Hook_Id": 0,
    "Expression_Type": "JSConstantString"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "literal",
    "loc": {
        "start": {
            "line": 20,
            "column": 8
        },
        "end": {
            "line": 20,
            "column": 45
        }
    },
    "Async_Hook_Id": 0,
    "Literal_Type": "StringLiteral",
    "Literal_Value_Type": "string",
    "Literal_Value": "[\"subtrairEdividir com x e y positivos\"]"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "endExpression",
    "loc": {
        "start": {
            "line": 20,
            "column": 8
        },
        "end": {
            "line": 20,
            "column": 45
        }
    },
    "Async_Hook_Id": 0,
    "Expression_Type": "JSConstantString"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "startExpression",
    "loc": {
        "start": {
            "line": 20,
            "column": 48
        },
        "end": {
            "line": 23,
            "column": 5
        }
    },
    "Async_Hook_Id": 0,
    "Expression_Type": "DefaultFunctionExpression"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "literal",
    "loc": {
        "start": {
            "line": 20,
            "column": 48
        },
        "end": {
            "line": 23,
            "column": 5
        }
    },
    "Async_Hook_Id": 0,
    "Literal_Type": "FunctionLiteral",
    "Literal_Value_Type": "function",
    "Literal_Value": "{\"val\":\"function () {\\n        const resultado1 = subtrairEdividir(20, 10);\\n        assert.equal(resultado1, 5);\\n    }\"}"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "invokeFunPre",
    "loc": {
        "start": {
            "line": 20,
            "column": 5
        },
        "end": {
            "line": 23,
            "column": 6
        }
    },
    "Async_Hook_Id": 0,
    "Function_Name": "Anonymous Function ",
    "iid": 37
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "endExpression",
    "loc": {
        "start": {
            "line": 20,
            "column": 48
        },
        "end": {
            "line": 23,
            "column": 5
        }
    },
    "Async_Hook_Id": 0,
    "Expression_Type": "DefaultFunctionExpression"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "invokeFun",
    "loc": {
        "start": {
            "line": 20,
            "column": 5
        },
        "end": {
            "line": 23,
            "column": 6
        }
    },
    "Async_Hook_Id": 0,
    "Function_Name": "Anonymous Function ",
    "Tipo_Returned_Value": "object",
    "Returned_Value": "[{\"type\":\"1\",\"title\":\"2\",\"body\":\"3\",\"async\":0,\"sync\":true,\"_timeout\":2000,\"_slow\":75,\"_retries\":-1,\"timedOut\":false,\"_currentRetry\":0,\"pending\":false,\"file\":\"4\",\"parent\":\"5\",\"ctx\":\"6\"},\"test\",\"subtrairEdividir com x e y positivos\",\"function () {\\n        const resultado1 = subtrairEdividir(20, 10);\\n        assert.equal(resultado1, 5);\\n    }\",\"/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js\",{\"title\":\"7\",\"ctx\":\"6\",\"suites\":\"8\",\"tests\":\"9\",\"root\":false,\"pending\":false,\"_retries\":-1,\"_beforeEach\":\"10\",\"_beforeAll\":\"11\",\"_afterEach\":\"12\",\"_afterAll\":\"13\",\"_timeout\":2000,\"_slow\":75,\"_bail\":false,\"_onlyTests\":\"14\",\"_onlySuites\":\"15\",\"delayed\":false,\"parent\":\"16\",\"file\":\"4\"},{},\"Testes da Segunda funcao\",[],[\"0\"],[],[],[],[],[],[],{\"title\":\"17\",\"ctx\":\"18\",\"suites\":\"19\",\"tests\":\"20\",\"root\":true,\"pending\":false,\"_retries\":-1,\"_beforeEach\":\"21\",\"_beforeAll\":\"22\",\"_afterEach\":\"23\",\"_afterAll\":\"24\",\"_timeout\":2000,\"_slow\":75,\"_bail\":false,\"_onlyTests\":\"25\",\"_onlySuites\":\"26\",\"delayed\":false,\"_events\":\"27\",\"_eventsCount\":1},\"\",{},[\"28\",\"5\"],[],[],[],[],[],[],[],{\"pre-require\":\"29\"},{\"title\":\"30\",\"ctx\":\"31\",\"suites\":\"32\",\"tests\":\"33\",\"root\":false,\"pending\":false,\"_retries\":-1,\"_beforeEach\":\"34\",\"_beforeAll\":\"35\",\"_afterEach\":\"36\",\"_afterAll\":\"37\",\"_timeout\":2000,\"_slow\":75,\"_bail\":false,\"_onlyTests\":\"38\",\"_onlySuites\":\"39\",\"delayed\":false,\"parent\":\"16\",\"file\":\"4\"},[null,null],\"Testes da Primeira funcao\",{},[],[\"40\",\"41\"],[],[],[],[],[],[],{\"type\":\"1\",\"title\":\"42\",\"body\":\"43\",\"async\":0,\"sync\":true,\"_timeout\":2000,\"_slow\":75,\"_retries\":-1,\"timedOut\":false,\"_currentRetry\":0,\"pending\":false,\"file\":\"4\",\"parent\":\"28\",\"ctx\":\"31\"},{\"type\":\"1\",\"title\":\"44\",\"body\":\"45\",\"async\":0,\"sync\":true,\"_timeout\":2000,\"_slow\":75,\"_retries\":-1,\"timedOut\":false,\"_currentRetry\":0,\"pending\":false,\"file\":\"4\",\"parent\":\"28\",\"ctx\":\"31\"},\"somarEdobrar com x e y positivos\",\"function () {\\n        const resultado1 = somarEdobrar(8, 12);\\n        assert.equal(resultado1, 40);\\n    }\",\"somarEdobrar com x e y negativos\",\"function () {\\n        const resultado2 = somarEdobrar(-10, -20);\\n        assert.equal(resultado2, -60);\\n    }\"]",
    "iid": 37,
    "Runtime_ms": 1.5067469999194145
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "endExpression",
    "loc": {
        "start": {
            "line": 20,
            "column": 5
        },
        "end": {
            "line": 23,
            "column": 6
        }
    },
    "Async_Hook_Id": 0,
    "Expression_Type": "CallN"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "awaitPost",
    "loc": {
        "start": {
            "line": 25,
            "column": 5
        },
        "end": {
            "line": 28,
            "column": 6
        }
    },
    "Async_Hook_Id": 0,
    "Statement_Type": "CallN"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "startExpression",
    "loc": {
        "start": {
            "line": 25,
            "column": 5
        },
        "end": {
            "line": 28,
            "column": 6
        }
    },
    "Async_Hook_Id": 0,
    "Expression_Type": "CallN"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "startExpression",
    "loc": {
        "start": {
            "line": 25,
            "column": 5
        },
        "end": {
            "line": 25,
            "column": 6
        }
    },
    "Async_Hook_Id": 0,
    "Expression_Type": "GlobalProperty"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "read",
    "loc": {
        "start": {
            "line": 25,
            "column": 5
        },
        "end": {
            "line": 25,
            "column": 6
        }
    },
    "Async_Hook_Id": 0,
    "Variable_Name": "it",
    "Type_Value_Read": "function",
    "val": "{\"val\":\"function (title, fn) {\\n      var suite = suites[0];\\n      if (suite.isPending()) {\\n        fn = null;\\n      }\\n      var test = new Test(title, fn);\\n      test.file = file;\\n      suite.addTest(test);\\n      return test;\\n    }\"}"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "endExpression",
    "loc": {
        "start": {
            "line": 25,
            "column": 5
        },
        "end": {
            "line": 25,
            "column": 6
        }
    },
    "Async_Hook_Id": 0,
    "Expression_Type": "GlobalProperty"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "startExpression",
    "loc": {
        "start": {
            "line": 25,
            "column": 8
        },
        "end": {
            "line": 25,
            "column": 45
        }
    },
    "Async_Hook_Id": 0,
    "Expression_Type": "JSConstantString"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "literal",
    "loc": {
        "start": {
            "line": 25,
            "column": 8
        },
        "end": {
            "line": 25,
            "column": 45
        }
    },
    "Async_Hook_Id": 0,
    "Literal_Type": "StringLiteral",
    "Literal_Value_Type": "string",
    "Literal_Value": "[\"subtrairEdividir com x e y negativos\"]"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "endExpression",
    "loc": {
        "start": {
            "line": 25,
            "column": 8
        },
        "end": {
            "line": 25,
            "column": 45
        }
    },
    "Async_Hook_Id": 0,
    "Expression_Type": "JSConstantString"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "startExpression",
    "loc": {
        "start": {
            "line": 25,
            "column": 48
        },
        "end": {
            "line": 28,
            "column": 5
        }
    },
    "Async_Hook_Id": 0,
    "Expression_Type": "DefaultFunctionExpression"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "literal",
    "loc": {
        "start": {
            "line": 25,
            "column": 48
        },
        "end": {
            "line": 28,
            "column": 5
        }
    },
    "Async_Hook_Id": 0,
    "Literal_Type": "FunctionLiteral",
    "Literal_Value_Type": "function",
    "Literal_Value": "{\"val\":\"function () {\\n        const resultado1 = subtrairEdividir(-30, -8);\\n        assert.equal(resultado1, -11);\\n    }\"}"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "invokeFunPre",
    "loc": {
        "start": {
            "line": 25,
            "column": 5
        },
        "end": {
            "line": 28,
            "column": 6
        }
    },
    "Async_Hook_Id": 0,
    "Function_Name": "Anonymous Function ",
    "iid": 41
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "endExpression",
    "loc": {
        "start": {
            "line": 25,
            "column": 48
        },
        "end": {
            "line": 28,
            "column": 5
        }
    },
    "Async_Hook_Id": 0,
    "Expression_Type": "DefaultFunctionExpression"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "invokeFun",
    "loc": {
        "start": {
            "line": 25,
            "column": 5
        },
        "end": {
            "line": 28,
            "column": 6
        }
    },
    "Async_Hook_Id": 0,
    "Function_Name": "Anonymous Function ",
    "Tipo_Returned_Value": "object",
    "Returned_Value": "[{\"type\":\"1\",\"title\":\"2\",\"body\":\"3\",\"async\":0,\"sync\":true,\"_timeout\":2000,\"_slow\":75,\"_retries\":-1,\"timedOut\":false,\"_currentRetry\":0,\"pending\":false,\"file\":\"4\",\"parent\":\"5\",\"ctx\":\"6\"},\"test\",\"subtrairEdividir com x e y negativos\",\"function () {\\n        const resultado1 = subtrairEdividir(-30, -8);\\n        assert.equal(resultado1, -11);\\n    }\",\"/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js\",{\"title\":\"7\",\"ctx\":\"6\",\"suites\":\"8\",\"tests\":\"9\",\"root\":false,\"pending\":false,\"_retries\":-1,\"_beforeEach\":\"10\",\"_beforeAll\":\"11\",\"_afterEach\":\"12\",\"_afterAll\":\"13\",\"_timeout\":2000,\"_slow\":75,\"_bail\":false,\"_onlyTests\":\"14\",\"_onlySuites\":\"15\",\"delayed\":false,\"parent\":\"16\",\"file\":\"4\"},{},\"Testes da Segunda funcao\",[],[\"17\",\"0\"],[],[],[],[],[],[],{\"title\":\"18\",\"ctx\":\"19\",\"suites\":\"20\",\"tests\":\"21\",\"root\":true,\"pending\":false,\"_retries\":-1,\"_beforeEach\":\"22\",\"_beforeAll\":\"23\",\"_afterEach\":\"24\",\"_afterAll\":\"25\",\"_timeout\":2000,\"_slow\":75,\"_bail\":false,\"_onlyTests\":\"26\",\"_onlySuites\":\"27\",\"delayed\":false,\"_events\":\"28\",\"_eventsCount\":1},{\"type\":\"1\",\"title\":\"29\",\"body\":\"30\",\"async\":0,\"sync\":true,\"_timeout\":2000,\"_slow\":75,\"_retries\":-1,\"timedOut\":false,\"_currentRetry\":0,\"pending\":false,\"file\":\"4\",\"parent\":\"5\",\"ctx\":\"6\"},\"\",{},[\"31\",\"5\"],[],[],[],[],[],[],[],{\"pre-require\":\"32\"},\"subtrairEdividir com x e y positivos\",\"function () {\\n        const resultado1 = subtrairEdividir(20, 10);\\n        assert.equal(resultado1, 5);\\n    }\",{\"title\":\"33\",\"ctx\":\"34\",\"suites\":\"35\",\"tests\":\"36\",\"root\":false,\"pending\":false,\"_retries\":-1,\"_beforeEach\":\"37\",\"_beforeAll\":\"38\",\"_afterEach\":\"39\",\"_afterAll\":\"40\",\"_timeout\":2000,\"_slow\":75,\"_bail\":false,\"_onlyTests\":\"41\",\"_onlySuites\":\"42\",\"delayed\":false,\"parent\":\"16\",\"file\":\"4\"},[null,null],\"Testes da Primeira funcao\",{},[],[\"43\",\"44\"],[],[],[],[],[],[],{\"type\":\"1\",\"title\":\"45\",\"body\":\"46\",\"async\":0,\"sync\":true,\"_timeout\":2000,\"_slow\":75,\"_retries\":-1,\"timedOut\":false,\"_currentRetry\":0,\"pending\":false,\"file\":\"4\",\"parent\":\"31\",\"ctx\":\"34\"},{\"type\":\"1\",\"title\":\"47\",\"body\":\"48\",\"async\":0,\"sync\":true,\"_timeout\":2000,\"_slow\":75,\"_retries\":-1,\"timedOut\":false,\"_currentRetry\":0,\"pending\":false,\"file\":\"4\",\"parent\":\"31\",\"ctx\":\"34\"},\"somarEdobrar com x e y positivos\",\"function () {\\n        const resultado1 = somarEdobrar(8, 12);\\n        assert.equal(resultado1, 40);\\n    }\",\"somarEdobrar com x e y negativos\",\"function () {\\n        const resultado2 = somarEdobrar(-10, -20);\\n        assert.equal(resultado2, -60);\\n    }\"]",
    "iid": 41,
    "Runtime_ms": 0.8744440004229546
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "endExpression",
    "loc": {
        "start": {
            "line": 25,
            "column": 5
        },
        "end": {
            "line": 28,
            "column": 6
        }
    },
    "Async_Hook_Id": 0,
    "Expression_Type": "CallN"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "functionExit",
    "loc": {
        "start": {
            "line": 19,
            "column": 38
        },
        "end": {
            "line": 30,
            "column": 1
        }
    },
    "Async_Hook_Id": 0,
    "Returned_Type": "undefined",
    "Returned_Value": "[]",
    "Excession_Occurred": {},
    "iid": 35,
    "Runtime_ms": 21.85657100006938
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "invokeFun",
    "loc": {
        "start": {
            "line": 19,
            "column": 1
        },
        "end": {
            "line": 30,
            "column": 2
        }
    },
    "Async_Hook_Id": 0,
    "Function_Name": "Anonymous Function ",
    "Tipo_Returned_Value": "object",
    "Returned_Value": "[{\"title\":\"1\",\"ctx\":\"2\",\"suites\":\"3\",\"tests\":\"4\",\"root\":false,\"pending\":false,\"_retries\":-1,\"_beforeEach\":\"5\",\"_beforeAll\":\"6\",\"_afterEach\":\"7\",\"_afterAll\":\"8\",\"_timeout\":2000,\"_slow\":75,\"_bail\":false,\"_onlyTests\":\"9\",\"_onlySuites\":\"10\",\"delayed\":false,\"parent\":\"11\",\"file\":\"12\"},\"Testes da Segunda funcao\",{},[],[\"13\",\"14\"],[],[],[],[],[],[],{\"title\":\"15\",\"ctx\":\"16\",\"suites\":\"17\",\"tests\":\"18\",\"root\":true,\"pending\":false,\"_retries\":-1,\"_beforeEach\":\"19\",\"_beforeAll\":\"20\",\"_afterEach\":\"21\",\"_afterAll\":\"22\",\"_timeout\":2000,\"_slow\":75,\"_bail\":false,\"_onlyTests\":\"23\",\"_onlySuites\":\"24\",\"delayed\":false,\"_events\":\"25\",\"_eventsCount\":1},\"/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js\",{\"type\":\"26\",\"title\":\"27\",\"body\":\"28\",\"async\":0,\"sync\":true,\"_timeout\":2000,\"_slow\":75,\"_retries\":-1,\"timedOut\":false,\"_currentRetry\":0,\"pending\":false,\"file\":\"12\",\"parent\":\"0\",\"ctx\":\"2\"},{\"type\":\"26\",\"title\":\"29\",\"body\":\"30\",\"async\":0,\"sync\":true,\"_timeout\":2000,\"_slow\":75,\"_retries\":-1,\"timedOut\":false,\"_currentRetry\":0,\"pending\":false,\"file\":\"12\",\"parent\":\"0\",\"ctx\":\"2\"},\"\",{},[\"31\",\"0\"],[],[],[],[],[],[],[],{\"pre-require\":\"32\"},\"test\",\"subtrairEdividir com x e y positivos\",\"function () {\\n        const resultado1 = subtrairEdividir(20, 10);\\n        assert.equal(resultado1, 5);\\n    }\",\"subtrairEdividir com x e y negativos\",\"function () {\\n        const resultado1 = subtrairEdividir(-30, -8);\\n        assert.equal(resultado1, -11);\\n    }\",{\"title\":\"33\",\"ctx\":\"34\",\"suites\":\"35\",\"tests\":\"36\",\"root\":false,\"pending\":false,\"_retries\":-1,\"_beforeEach\":\"37\",\"_beforeAll\":\"38\",\"_afterEach\":\"39\",\"_afterAll\":\"40\",\"_timeout\":2000,\"_slow\":75,\"_bail\":false,\"_onlyTests\":\"41\",\"_onlySuites\":\"42\",\"delayed\":false,\"parent\":\"11\",\"file\":\"12\"},[null,null],\"Testes da Primeira funcao\",{},[],[\"43\",\"44\"],[],[],[],[],[],[],{\"type\":\"26\",\"title\":\"45\",\"body\":\"46\",\"async\":0,\"sync\":true,\"_timeout\":2000,\"_slow\":75,\"_retries\":-1,\"timedOut\":false,\"_currentRetry\":0,\"pending\":false,\"file\":\"12\",\"parent\":\"31\",\"ctx\":\"34\"},{\"type\":\"26\",\"title\":\"47\",\"body\":\"48\",\"async\":0,\"sync\":true,\"_timeout\":2000,\"_slow\":75,\"_retries\":-1,\"timedOut\":false,\"_currentRetry\":0,\"pending\":false,\"file\":\"12\",\"parent\":\"31\",\"ctx\":\"34\"},\"somarEdobrar com x e y positivos\",\"function () {\\n        const resultado1 = somarEdobrar(8, 12);\\n        assert.equal(resultado1, 40);\\n    }\",\"somarEdobrar com x e y negativos\",\"function () {\\n        const resultado2 = somarEdobrar(-10, -20);\\n        assert.equal(resultado2, -60);\\n    }\"]",
    "iid": 32,
    "Runtime_ms": 23.421981001272798
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "endExpression",
    "loc": {
        "start": {
            "line": 19,
            "column": 1
        },
        "end": {
            "line": 30,
            "column": 2
        }
    },
    "Async_Hook_Id": 0,
    "Expression_Type": "CallN"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "functionExit",
    "loc": {
        "start": {
            "line": 1,
            "column": 1
        },
        "end": {
            "line": 30,
            "column": 4
        }
    },
    "Async_Hook_Id": 0,
    "Returned_Type": "undefined",
    "Returned_Value": "[]",
    "Excession_Occurred": {},
    "iid": 1,
    "Runtime_ms": 123.94790499843657
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "functionEnter",
    "loc": {
        "start": {
            "line": 20,
            "column": 48
        },
        "end": {
            "line": 23,
            "column": 5
        }
    },
    "Async_Hook_Id": 14,
    "Function_Name": "Anonymous Function ",
    "iid": 40
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "awaitPost",
    "loc": {
        "start": {
            "line": 21,
            "column": 9
        },
        "end": {
            "line": 21,
            "column": 51
        }
    },
    "Async_Hook_Id": 14,
    "Statement_Type": "JSWriteCurrentFrameSlot"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "startExpression",
    "loc": {
        "start": {
            "line": 21,
            "column": 28
        },
        "end": {
            "line": 21,
            "column": 51
        }
    },
    "Async_Hook_Id": 14,
    "Expression_Type": "CallN"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "startExpression",
    "loc": {
        "start": {
            "line": 21,
            "column": 28
        },
        "end": {
            "line": 21,
            "column": 43
        }
    },
    "Async_Hook_Id": 14,
    "Expression_Type": "JSReadScopeFrameSlotWithTDZ"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "read",
    "loc": {
        "start": {
            "line": 21,
            "column": 28
        },
        "end": {
            "line": 21,
            "column": 43
        }
    },
    "Async_Hook_Id": 14,
    "Variable_Name": "subtrairEdividir",
    "Type_Value_Read": "function",
    "val": "{\"val\":\"function subtrairEdividir(primeiro, segundo) {\\n    let resultado = primeiro - segundo;\\n    resultado = resultado/2;\\n    return resultado;\\n}\"}"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "endExpression",
    "loc": {
        "start": {
            "line": 21,
            "column": 28
        },
        "end": {
            "line": 21,
            "column": 43
        }
    },
    "Async_Hook_Id": 14,
    "Expression_Type": "JSReadScopeFrameSlotWithTDZ"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "startExpression",
    "loc": {
        "start": {
            "line": 21,
            "column": 45
        },
        "end": {
            "line": 21,
            "column": 46
        }
    },
    "Async_Hook_Id": 14,
    "Expression_Type": "JSConstantInteger"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "literal",
    "loc": {
        "start": {
            "line": 21,
            "column": 45
        },
        "end": {
            "line": 21,
            "column": 46
        }
    },
    "Async_Hook_Id": 14,
    "Literal_Type": "NumericLiteral",
    "Literal_Value_Type": "number",
    "Literal_Value": "[20]"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "endExpression",
    "loc": {
        "start": {
            "line": 21,
            "column": 45
        },
        "end": {
            "line": 21,
            "column": 46
        }
    },
    "Async_Hook_Id": 14,
    "Expression_Type": "JSConstantInteger"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "startExpression",
    "loc": {
        "start": {
            "line": 21,
            "column": 49
        },
        "end": {
            "line": 21,
            "column": 50
        }
    },
    "Async_Hook_Id": 14,
    "Expression_Type": "JSConstantInteger"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "literal",
    "loc": {
        "start": {
            "line": 21,
            "column": 49
        },
        "end": {
            "line": 21,
            "column": 50
        }
    },
    "Async_Hook_Id": 14,
    "Literal_Type": "NumericLiteral",
    "Literal_Value_Type": "number",
    "Literal_Value": "[10]"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "invokeFunPre",
    "loc": {
        "start": {
            "line": 21,
            "column": 28
        },
        "end": {
            "line": 21,
            "column": 51
        }
    },
    "Async_Hook_Id": 14,
    "Function_Name": "subtrairEdividir",
    "iid": 47
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "endExpression",
    "loc": {
        "start": {
            "line": 21,
            "column": 49
        },
        "end": {
            "line": 21,
            "column": 50
        }
    },
    "Async_Hook_Id": 14,
    "Expression_Type": "JSConstantInteger"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/arquivoPrincipal2.js",
    "Detected_Hook": "functionEnter",
    "loc": {
        "start": {
            "line": 9,
            "column": 1
        },
        "end": {
            "line": 13,
            "column": 1
        }
    },
    "Async_Hook_Id": 14,
    "Function_Name": "subtrairEdividir",
    "iid": 11
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/arquivoPrincipal2.js",
    "Detected_Hook": "awaitPost",
    "loc": {
        "start": {
            "line": 10,
            "column": 5
        },
        "end": {
            "line": 10,
            "column": 38
        }
    },
    "Async_Hook_Id": 14,
    "Statement_Type": "JSWriteCurrentFrameSlot"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/arquivoPrincipal2.js",
    "Detected_Hook": "startExpression",
    "loc": {
        "start": {
            "line": 10,
            "column": 21
        },
        "end": {
            "line": 10,
            "column": 38
        }
    },
    "Async_Hook_Id": 14,
    "Expression_Type": "JSSubtract"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/arquivoPrincipal2.js",
    "Detected_Hook": "startExpression",
    "loc": {
        "start": {
            "line": 10,
            "column": 21
        },
        "end": {
            "line": 10,
            "column": 28
        }
    },
    "Async_Hook_Id": 14,
    "Expression_Type": "JSReadCurrentFrameSlot"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/arquivoPrincipal2.js",
    "Detected_Hook": "read",
    "loc": {
        "start": {
            "line": 10,
            "column": 21
        },
        "end": {
            "line": 10,
            "column": 28
        }
    },
    "Async_Hook_Id": 14,
    "Variable_Name": "primeiro",
    "Type_Value_Read": "number",
    "val": "[20]"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/arquivoPrincipal2.js",
    "Detected_Hook": "endExpression",
    "loc": {
        "start": {
            "line": 10,
            "column": 21
        },
        "end": {
            "line": 10,
            "column": 28
        }
    },
    "Async_Hook_Id": 14,
    "Expression_Type": "JSReadCurrentFrameSlot"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/arquivoPrincipal2.js",
    "Detected_Hook": "startExpression",
    "loc": {
        "start": {
            "line": 10,
            "column": 32
        },
        "end": {
            "line": 10,
            "column": 38
        }
    },
    "Async_Hook_Id": 14,
    "Expression_Type": "JSReadCurrentFrameSlot"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/arquivoPrincipal2.js",
    "Detected_Hook": "read",
    "loc": {
        "start": {
            "line": 10,
            "column": 32
        },
        "end": {
            "line": 10,
            "column": 38
        }
    },
    "Async_Hook_Id": 14,
    "Variable_Name": "segundo",
    "Type_Value_Read": "number",
    "val": "[10]"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/arquivoPrincipal2.js",
    "Detected_Hook": "endExpression",
    "loc": {
        "start": {
            "line": 10,
            "column": 32
        },
        "end": {
            "line": 10,
            "column": 38
        }
    },
    "Async_Hook_Id": 14,
    "Expression_Type": "JSReadCurrentFrameSlot"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/arquivoPrincipal2.js",
    "Detected_Hook": "endExpression",
    "loc": {
        "start": {
            "line": 10,
            "column": 21
        },
        "end": {
            "line": 10,
            "column": 38
        }
    },
    "Async_Hook_Id": 14,
    "Expression_Type": "JSSubtract"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/arquivoPrincipal2.js",
    "Detected_Hook": "write",
    "loc": {
        "start": {
            "line": 10,
            "column": 5
        },
        "end": {
            "line": 10,
            "column": 38
        }
    },
    "Async_Hook_Id": 14,
    "Variable_Name": "resultado",
    "Value_Type_Before_Write": "undefined",
    "Value_Before_Write": "[]",
    "Value_Type_After_Write": "number",
    "Value_After_Write": "[10]"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/arquivoPrincipal2.js",
    "Detected_Hook": "awaitPost",
    "loc": {
        "start": {
            "line": 11,
            "column": 5
        },
        "end": {
            "line": 11,
            "column": 27
        }
    },
    "Async_Hook_Id": 14,
    "Statement_Type": "JSWriteCurrentFrameSlot"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/arquivoPrincipal2.js",
    "Detected_Hook": "startExpression",
    "loc": {
        "start": {
            "line": 11,
            "column": 5
        },
        "end": {
            "line": 11,
            "column": 27
        }
    },
    "Async_Hook_Id": 14,
    "Expression_Type": "JSWriteCurrentFrameSlot"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/arquivoPrincipal2.js",
    "Detected_Hook": "startExpression",
    "loc": {
        "start": {
            "line": 11,
            "column": 17
        },
        "end": {
            "line": 11,
            "column": 27
        }
    },
    "Async_Hook_Id": 14,
    "Expression_Type": "JSDivide"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/arquivoPrincipal2.js",
    "Detected_Hook": "startExpression",
    "loc": {
        "start": {
            "line": 11,
            "column": 17
        },
        "end": {
            "line": 11,
            "column": 25
        }
    },
    "Async_Hook_Id": 14,
    "Expression_Type": "JSReadCurrentFrameSlot"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/arquivoPrincipal2.js",
    "Detected_Hook": "read",
    "loc": {
        "start": {
            "line": 11,
            "column": 17
        },
        "end": {
            "line": 11,
            "column": 25
        }
    },
    "Async_Hook_Id": 14,
    "Variable_Name": "resultado",
    "Type_Value_Read": "number",
    "val": "[10]"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/arquivoPrincipal2.js",
    "Detected_Hook": "endExpression",
    "loc": {
        "start": {
            "line": 11,
            "column": 17
        },
        "end": {
            "line": 11,
            "column": 25
        }
    },
    "Async_Hook_Id": 14,
    "Expression_Type": "JSReadCurrentFrameSlot"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/arquivoPrincipal2.js",
    "Detected_Hook": "startExpression",
    "loc": {
        "start": {
            "line": 11,
            "column": 27
        },
        "end": {
            "line": 11,
            "column": 27
        }
    },
    "Async_Hook_Id": 14,
    "Expression_Type": "JSConstantInteger"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/arquivoPrincipal2.js",
    "Detected_Hook": "literal",
    "loc": {
        "start": {
            "line": 11,
            "column": 27
        },
        "end": {
            "line": 11,
            "column": 27
        }
    },
    "Async_Hook_Id": 14,
    "Literal_Type": "NumericLiteral",
    "Literal_Value_Type": "number",
    "Literal_Value": "[2]"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/arquivoPrincipal2.js",
    "Detected_Hook": "endExpression",
    "loc": {
        "start": {
            "line": 11,
            "column": 27
        },
        "end": {
            "line": 11,
            "column": 27
        }
    },
    "Async_Hook_Id": 14,
    "Expression_Type": "JSConstantInteger"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/arquivoPrincipal2.js",
    "Detected_Hook": "endExpression",
    "loc": {
        "start": {
            "line": 11,
            "column": 17
        },
        "end": {
            "line": 11,
            "column": 27
        }
    },
    "Async_Hook_Id": 14,
    "Expression_Type": "JSDivide"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/arquivoPrincipal2.js",
    "Detected_Hook": "write",
    "loc": {
        "start": {
            "line": 11,
            "column": 5
        },
        "end": {
            "line": 11,
            "column": 27
        }
    },
    "Async_Hook_Id": 14,
    "Variable_Name": "resultado",
    "Value_Type_Before_Write": "undefined",
    "Value_Before_Write": "[]",
    "Value_Type_After_Write": "number",
    "Value_After_Write": "[5]"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/arquivoPrincipal2.js",
    "Detected_Hook": "endExpression",
    "loc": {
        "start": {
            "line": 11,
            "column": 5
        },
        "end": {
            "line": 11,
            "column": 27
        }
    },
    "Async_Hook_Id": 14,
    "Expression_Type": "JSWriteCurrentFrameSlot"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/arquivoPrincipal2.js",
    "Detected_Hook": "awaitPost",
    "loc": {
        "start": {
            "line": 12,
            "column": 5
        },
        "end": {
            "line": 12,
            "column": 21
        }
    },
    "Async_Hook_Id": 14,
    "Statement_Type": "TerminalPositionReturn"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/arquivoPrincipal2.js",
    "Detected_Hook": "startExpression",
    "loc": {
        "start": {
            "line": 12,
            "column": 12
        },
        "end": {
            "line": 12,
            "column": 20
        }
    },
    "Async_Hook_Id": 14,
    "Expression_Type": "JSReadCurrentFrameSlot"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/arquivoPrincipal2.js",
    "Detected_Hook": "read",
    "loc": {
        "start": {
            "line": 12,
            "column": 12
        },
        "end": {
            "line": 12,
            "column": 20
        }
    },
    "Async_Hook_Id": 14,
    "Variable_Name": "resultado",
    "Type_Value_Read": "number",
    "val": "[5]"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/arquivoPrincipal2.js",
    "Detected_Hook": "endExpression",
    "loc": {
        "start": {
            "line": 12,
            "column": 12
        },
        "end": {
            "line": 12,
            "column": 20
        }
    },
    "Async_Hook_Id": 14,
    "Expression_Type": "JSReadCurrentFrameSlot"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/arquivoPrincipal2.js",
    "Detected_Hook": "functionExit",
    "loc": {
        "start": {
            "line": 9,
            "column": 1
        },
        "end": {
            "line": 13,
            "column": 1
        }
    },
    "Async_Hook_Id": 14,
    "Returned_Type": "number",
    "Returned_Value": "[5]",
    "Excession_Occurred": {},
    "iid": 11,
    "Runtime_ms": 17.04138300009072
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "invokeFun",
    "loc": {
        "start": {
            "line": 21,
            "column": 28
        },
        "end": {
            "line": 21,
            "column": 51
        }
    },
    "Async_Hook_Id": 14,
    "Function_Name": "subtrairEdividir",
    "Tipo_Returned_Value": "number",
    "Returned_Value": "[5]",
    "iid": 47,
    "Runtime_ms": 18.7872680015862
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "endExpression",
    "loc": {
        "start": {
            "line": 21,
            "column": 28
        },
        "end": {
            "line": 21,
            "column": 51
        }
    },
    "Async_Hook_Id": 14,
    "Expression_Type": "CallN"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "write",
    "loc": {
        "start": {
            "line": 21,
            "column": 9
        },
        "end": {
            "line": 21,
            "column": 51
        }
    },
    "Async_Hook_Id": 14,
    "Variable_Name": "resultado1",
    "Value_Type_Before_Write": "undefined",
    "Value_Before_Write": "[]",
    "Value_Type_After_Write": "number",
    "Value_After_Write": "[5]"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "awaitPost",
    "loc": {
        "start": {
            "line": 22,
            "column": 9
        },
        "end": {
            "line": 22,
            "column": 35
        }
    },
    "Async_Hook_Id": 14,
    "Statement_Type": "InvokeN"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "startExpression",
    "loc": {
        "start": {
            "line": 22,
            "column": 9
        },
        "end": {
            "line": 22,
            "column": 35
        }
    },
    "Async_Hook_Id": 14,
    "Expression_Type": "InvokeN"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "startExpression",
    "loc": {
        "start": {
            "line": 22,
            "column": 9
        },
        "end": {
            "line": 22,
            "column": 14
        }
    },
    "Async_Hook_Id": 14,
    "Expression_Type": "JSReadScopeFrameSlotWithTDZ"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "read",
    "loc": {
        "start": {
            "line": 22,
            "column": 9
        },
        "end": {
            "line": 22,
            "column": 14
        }
    },
    "Async_Hook_Id": 14,
    "Variable_Name": "assert",
    "Type_Value_Read": "function",
    "val": "{\"val\":\"function ok(...args) {\\n  innerOk(ok, args.length, ...args);\\n}\"}"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "endExpression",
    "loc": {
        "start": {
            "line": 22,
            "column": 9
        },
        "end": {
            "line": 22,
            "column": 14
        }
    },
    "Async_Hook_Id": 14,
    "Expression_Type": "JSReadScopeFrameSlotWithTDZ"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "startExpression",
    "loc": {
        "start": {
            "line": 22,
            "column": 9
        },
        "end": {
            "line": 22,
            "column": 20
        }
    },
    "Async_Hook_Id": 14,
    "Expression_Type": "MaterializedTargetableProperty"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "getField",
    "loc": {
        "start": {
            "line": 22,
            "column": 9
        },
        "end": {
            "line": 22,
            "column": 20
        }
    },
    "Async_Hook_Id": 14,
    "Accessed_Object": "couldnt access base",
    "Accessed_Value_Type": "function",
    "Accessed_Value": "{\"val\":\"function equal(actual, expected, message) {\\n  if (arguments.length < 2) {\\n    throw new ERR_MISSING_ARGS('actual', 'expected');\\n  }\\n  // eslint-disable-next-line eqeqeq\\n  if (actual != expected && (!NumberIsNaN(actual) || !NumberIsNaN(expected))) {\\n    innerFail({\\n      actual,\\n      expected,\\n      message,\\n      operator: '==',\\n      stackStartFn: equal\\n    });\\n  }\\n}\"}"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "endExpression",
    "loc": {
        "start": {
            "line": 22,
            "column": 9
        },
        "end": {
            "line": 22,
            "column": 20
        }
    },
    "Async_Hook_Id": 14,
    "Expression_Type": "MaterializedTargetableProperty"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "startExpression",
    "loc": {
        "start": {
            "line": 22,
            "column": 22
        },
        "end": {
            "line": 22,
            "column": 31
        }
    },
    "Async_Hook_Id": 14,
    "Expression_Type": "JSReadCurrentFrameSlot"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "read",
    "loc": {
        "start": {
            "line": 22,
            "column": 22
        },
        "end": {
            "line": 22,
            "column": 31
        }
    },
    "Async_Hook_Id": 14,
    "Variable_Name": "resultado1",
    "Type_Value_Read": "number",
    "val": "[5]"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "endExpression",
    "loc": {
        "start": {
            "line": 22,
            "column": 22
        },
        "end": {
            "line": 22,
            "column": 31
        }
    },
    "Async_Hook_Id": 14,
    "Expression_Type": "JSReadCurrentFrameSlot"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "startExpression",
    "loc": {
        "start": {
            "line": 22,
            "column": 34
        },
        "end": {
            "line": 22,
            "column": 34
        }
    },
    "Async_Hook_Id": 14,
    "Expression_Type": "JSConstantInteger"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "literal",
    "loc": {
        "start": {
            "line": 22,
            "column": 34
        },
        "end": {
            "line": 22,
            "column": 34
        }
    },
    "Async_Hook_Id": 14,
    "Literal_Type": "NumericLiteral",
    "Literal_Value_Type": "number",
    "Literal_Value": "[5]"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "invokeFunPre",
    "loc": {
        "start": {
            "line": 22,
            "column": 9
        },
        "end": {
            "line": 22,
            "column": 35
        }
    },
    "Async_Hook_Id": 14,
    "Function_Name": "equal",
    "iid": 62
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "endExpression",
    "loc": {
        "start": {
            "line": 22,
            "column": 34
        },
        "end": {
            "line": 22,
            "column": 34
        }
    },
    "Async_Hook_Id": 14,
    "Expression_Type": "JSConstantInteger"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "invokeFun",
    "loc": {
        "start": {
            "line": 22,
            "column": 9
        },
        "end": {
            "line": 22,
            "column": 35
        }
    },
    "Async_Hook_Id": 14,
    "Function_Name": "equal",
    "Tipo_Returned_Value": "undefined",
    "Returned_Value": "[]",
    "iid": 62,
    "Runtime_ms": 1.2235169988125563
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "endExpression",
    "loc": {
        "start": {
            "line": 22,
            "column": 9
        },
        "end": {
            "line": 22,
            "column": 35
        }
    },
    "Async_Hook_Id": 14,
    "Expression_Type": "InvokeN"
},
{
    "File_Path": "/home/pedroubuntu/coisasNodeRT/datasetNodeRT/meuDatasetParaTestes/testesSimplesMocha/teste/testeMenor.js",
    "Detected_Hook": "functionExit",
    "loc": {
        "start": {
            "line": 20,
            "column": 48
        },
        "end": {
            "line": 23,
            "column": 5
        }
    },
    "Async_Hook_Id": 14,
    "Returned_Type": "undefined",
    "Returned_Value": "[]",
    "Excession_Occurred": {},
    "iid": 40,
    "Runtime_ms": 65.5947549995035
},
{
    "Detected_Hook": "endExecution",
    "Async_Hook_Id": 0
}
]