Estrutura do NodeRock:
- Remover a normalização do javascript e deixar para o python lidar com isso
- Enxugar os Traces, removendo os nomes de funções, valores retornados e outras coisas que não são utilizadas
- Ao rodar o nacd, se o nome do teste tiver `` ele dá errado direto
- No 11_executeRaceDetection, na linha let command = `nacd plain2 ./node_modules/.bin/mocha --exit -t 60000 -R spec ${testFile} -f ${currentTestWithQuotes}`;
em alguns casos, como nos BlockedKeys do animir, esse testFile não pode ser apenas o endereço local da pasta de testes, mas sim precisa ir em test/component/BlockedKeys/BlockedKeys.test.js

- rever o monkeypatching: nao esta funfando no nodearchiver: pedroubuntu@Aspire-A514-54:~/coisasNodeRT/datasetNodeRT/datasetDoNodeRacer/exploratory/node-archiver$ ./node_modules/.bin/_mocha --exit -t 10000 --require /home/pedroubuntu/coisasNodeRT/NodeRT-OpenSource/NodeRock_src/entrypoint_NodeRock/monkeyPatchingTestes/monkeypatching.js test/plugins.js -f "plugins zip should append multiple"

Benchmarks:
- Rodar o nacd no pencil

tasks:
- consertar o node-archiver
- gerar o dataset com todos os testes juntos
- testar os modelos de ML propostos no rascunho NodeRock, fazendo PCA e matriz de confusão dos modelos de hdbscan, occ e redes neurais
fazer a rede neural manualmente com keras/pythorch/sklearn, ou só usar o mlperceptron pronto na biblioteca?
- ver a dissertacao de mestrado